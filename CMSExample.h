
#ifndef CF4Hep_CMSExample_h
#define CF4Hep_CMSExample_h

// include c++
#include <vector>
// include fwk
#include "Algo.h"

std::vector<AlgoBase*> cmsChain(){
    std::vector<AlgoBase*> algos;
    AlgoBase* algo0 = new ToyAlgo("siPixelClusters",0,0);
    algo0->produces("siPixelClusters");
    algo0->reads("siPixelDigis");
    algos.push_back(algo0);
    AlgoBase* algo1 = new ToyAlgo("pfAllNeutralHadronsAndPhotons",0,0);
    algo1->produces("pfAllNeutralHadronsAndPhotons");
    algo1->reads("pfNoPileUp");
    algos.push_back(algo1);
    AlgoBase* algo2 = new ToyAlgo("hpsTancTaus",0,0);
    algo2->produces("hpsTancTaus");
    algo2->reads("hpsTancTausSansRefs");
    algos.push_back(algo2);
    AlgoBase* algo3 = new ToyAlgo("correctedHybridSuperClusters",0,0);
    algo3->produces("correctedHybridSuperClusters");
    algo3->reads("ecalRecHit");
    algo3->reads("hybridSuperClusters");
    algos.push_back(algo3);
    AlgoBase* algo4 = new ToyAlgo("hbheprereco",0,0);
    algo4->produces("hbheprereco");
    algo4->reads("hcalDigis");
    algos.push_back(algo4);
    AlgoBase* algo5 = new ToyAlgo("tobTecStepSelector",0,0);
    algo5->produces("tobTecStepSelector");
    algo5->reads("pixelVertices");
    algo5->reads("tobTecStepTracks");
    algo5->reads("offlineBeamSpot");
    algos.push_back(algo5);
    AlgoBase* algo6 = new ToyAlgo("pixelLessStepSeeds",0,0);
    algo6->produces("pixelLessStepSeeds");
    algo6->reads("siStripClusters");
    algo6->reads("siPixelClusters");
    algo6->reads("offlineBeamSpot");
    algos.push_back(algo6);
    AlgoBase* algo7 = new ToyAlgo("uncleanedOnlyAllConversions",0,0);
    algo7->produces("uncleanedOnlyAllConversions");
    algo7->reads("multi5x5SuperClusters");
    algo7->reads("uncleanedOnlyGsfGeneralInOutOutInConversionTrackMerger");
    algo7->reads("hybridSuperClusters");
    algo7->reads("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower");
    algo7->reads("uncleanedOnlyCorrectedHybridSuperClusters");
    algos.push_back(algo7);
    AlgoBase* algo8 = new ToyAlgo("shrinkingConePFTauDiscriminationAgainstMuon",0,0);
    algo8->produces("shrinkingConePFTauDiscriminationAgainstMuon");
    algo8->reads("shrinkingConePFTauProducer");
    algo8->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algos.push_back(algo8);
    AlgoBase* algo9 = new ToyAlgo("pixelLessStepClusters",0,0);
    algo9->produces("pixelLessStepClusters");
    algo9->reads("siStripClusters");
    algo9->reads("mixedTripletStepTracks");
    algo9->reads("mixedTripletStepClusters");
    algo9->reads("mixedTripletStep");
    algo9->reads("siPixelClusters");
    algos.push_back(algo9);
    AlgoBase* algo10 = new ToyAlgo("convStepTracks",0,0);
    algo10->produces("convStepTracks");
    algo10->reads("convTrackCandidates");
    algo10->reads("offlineBeamSpot");
    algos.push_back(algo10);
    AlgoBase* algo11 = new ToyAlgo("lowPtTripletStepSeeds",0,0);
    algo11->produces("lowPtTripletStepSeeds");
    algo11->reads("siStripClusters");
    algo11->reads("siPixelClusters");
    algo11->reads("offlineBeamSpot");
    algos.push_back(algo11);
    AlgoBase* algo12 = new ToyAlgo("hpsPFTauDiscriminationByMVAElectronRejection",0,0);
    algo12->produces("hpsPFTauDiscriminationByMVAElectronRejection");
    algo12->reads("hpsPFTauProducer");
    algo12->reads("hpsPFTauDiscriminationByMediumElectronRejection");
    algo12->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algos.push_back(algo12);
    AlgoBase* algo13 = new ToyAlgo("ak5JetTracksAssociatorAtCaloFace",0,0);
    algo13->produces("ak5JetTracksAssociatorAtCaloFace");
    algo13->reads("ak5CaloJets");
    algo13->reads("trackExtrapolator");
    algo13->reads("generalTracks");
    algos.push_back(algo13);
    AlgoBase* algo14 = new ToyAlgo("uncleanedOnlyElectronCkfTrackCandidates",0,0);
    algo14->produces("uncleanedOnlyElectronCkfTrackCandidates");
    algo14->reads("uncleanedOnlyElectronSeeds");
    algos.push_back(algo14);
    AlgoBase* algo15 = new ToyAlgo("kt4PFJets",0,0);
    algo15->produces("kt4PFJets");
    algo15->reads("particleFlow");
    algos.push_back(algo15);
    AlgoBase* algo16 = new ToyAlgo("muonEcalDetIds",0,0);
    algo16->produces("muonEcalDetIds");
    algo16->reads("muons1stStep");
    algos.push_back(algo16);
    AlgoBase* algo17 = new ToyAlgo("hpsTancTausDiscriminationByTanc",0,0);
    algo17->produces("hpsTancTausDiscriminationByTanc");
    algo17->reads("hpsTancTaus");
    algo17->reads("hpsTancTausDiscriminationByTancRaw");
    algo17->reads("hpsTancTausDiscriminationByDecayModeSelection");
    algo17->reads("hpsTancTausDiscriminationByLeadingPionPtCut");
    algos.push_back(algo17);
    AlgoBase* algo18 = new ToyAlgo("ak7JetTracksAssociatorAtCaloFace",0,0);
    algo18->produces("ak7JetTracksAssociatorAtCaloFace");
    algo18->reads("generalTracks");
    algo18->reads("trackExtrapolator");
    algo18->reads("ak7CaloJets");
    algos.push_back(algo18);
    AlgoBase* algo19 = new ToyAlgo("pixelLessStepSelector",0,0);
    algo19->produces("pixelLessStepSelector");
    algo19->reads("pixelVertices");
    algo19->reads("pixelLessStepTracks");
    algo19->reads("offlineBeamSpot");
    algos.push_back(algo19);
    AlgoBase* algo20 = new ToyAlgo("pfAllNeutralHadrons",0,0);
    algo20->produces("pfAllNeutralHadrons");
    algo20->reads("pfNoPileUp");
    algos.push_back(algo20);
    AlgoBase* algo21 = new ToyAlgo("pfTrackElec",0,0);
    algo21->produces("pfTrackElec");
    algo21->reads("particleFlowClusterECAL");
    algo21->reads("electronGsfTracks");
    algo21->reads("pfConversions");
    algo21->reads("offlinePrimaryVertices");
    algo21->reads("pfDisplacedTrackerVertex");
    algo21->reads("pfTrack");
    algos.push_back(algo21);
    AlgoBase* algo22 = new ToyAlgo("kt4JetID",0,0);
    algo22->produces("kt4JetID");
    algo22->reads("horeco");
    algo22->reads("kt4CaloJets");
    algo22->reads("rpcRecHits");
    algo22->reads("hbhereco");
    algo22->reads("hfreco");
    algo22->reads("ecalRecHit");
    algos.push_back(algo22);
    AlgoBase* algo23 = new ToyAlgo("hpsPFTauDiscriminationByVLooseChargedIsolation",0,0);
    algo23->produces("hpsPFTauDiscriminationByVLooseChargedIsolation");
    algo23->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo23->reads("hpsPFTauProducer");
    algo23->reads("offlinePrimaryVertices");
    algo23->reads("kt6PFJets");
    algo23->reads("particleFlow");
    algos.push_back(algo23);
    AlgoBase* algo24 = new ToyAlgo("ecalPreshowerDigis",0,0);
    algo24->produces("ecalPreshowerDigis");
    algo24->reads("rawDataCollector");
    algos.push_back(algo24);
    AlgoBase* algo25 = new ToyAlgo("interestingEcalDetIdEBU",0,0);
    algo25->produces("interestingEcalDetIdEBU");
    algo25->reads("ecalRecHit");
    algo25->reads("hybridSuperClusters");
    algos.push_back(algo25);
    AlgoBase* algo26 = new ToyAlgo("hpsPFTauDiscriminationByLooseElectronRejection",0,0);
    algo26->produces("hpsPFTauDiscriminationByLooseElectronRejection");
    algo26->reads("hpsPFTauProducer");
    algos.push_back(algo26);
    AlgoBase* algo27 = new ToyAlgo("hpsTancTausDiscriminationByMediumIsolation",0,0);
    algo27->produces("hpsTancTausDiscriminationByMediumIsolation");
    algo27->reads("hpsTancTaus");
    algo27->reads("offlinePrimaryVertices");
    algo27->reads("kt6PFJets");
    algo27->reads("particleFlow");
    algo27->reads("hpsTancTausDiscriminationByDecayModeSelection");
    algos.push_back(algo27);
    AlgoBase* algo28 = new ToyAlgo("pfSelectedElectrons",0,0);
    algo28->produces("pfSelectedElectrons");
    algo28->reads("particleFlowTmp");
    algos.push_back(algo28);
    AlgoBase* algo29 = new ToyAlgo("conversionStepTracks",0,0);
    algo29->produces("conversionStepTracks");
    algo29->reads("convStepSelector");
    algo29->reads("convStepTracks");
    algos.push_back(algo29);
    AlgoBase* algo30 = new ToyAlgo("hpsPFTauProducer",0,0);
    algo30->produces("hpsPFTauProducer");
    algo30->reads("hpsPFTauProducerSansRefs");
    algos.push_back(algo30);
    AlgoBase* algo31 = new ToyAlgo("siPixelDigis",0,0);
    algo31->produces("siPixelDigis");
    algo31->reads("rawDataCollector");
    algos.push_back(algo31);
    AlgoBase* algo32 = new ToyAlgo("jetProbabilityBJetTags",0,0);
    algo32->produces("jetProbabilityBJetTags");
    algo32->reads("impactParameterTagInfos");
    algos.push_back(algo32);
    AlgoBase* algo33 = new ToyAlgo("ak7JetID",0,0);
    algo33->produces("ak7JetID");
    algo33->reads("horeco");
    algo33->reads("rpcRecHits");
    algo33->reads("hbhereco");
    algo33->reads("hfreco");
    algo33->reads("ecalRecHit");
    algo33->reads("ak7CaloJets");
    algos.push_back(algo33);
    AlgoBase* algo34 = new ToyAlgo("phPFIsoValueGamma04",0,0);
    algo34->produces("phPFIsoValueGamma04");
    algo34->reads("phPFIsoDepositGamma");
    algos.push_back(algo34);
    AlgoBase* algo35 = new ToyAlgo("hcalnoise",0,0);
    algo35->produces("hcalnoise");
    algos.push_back(algo35);
    AlgoBase* algo36 = new ToyAlgo("hpsPFTauDiscriminationByLooseChargedIsolation",0,0);
    algo36->produces("hpsPFTauDiscriminationByLooseChargedIsolation");
    algo36->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo36->reads("hpsPFTauProducer");
    algo36->reads("offlinePrimaryVertices");
    algo36->reads("kt6PFJets");
    algo36->reads("particleFlow");
    algos.push_back(algo36);
    AlgoBase* algo37 = new ToyAlgo("kt6PFJetsCentralNeutral",0,0);
    algo37->produces("kt6PFJetsCentralNeutral");
    algo37->reads("pfAllNeutralHadronsAndPhotons");
    algos.push_back(algo37);
    AlgoBase* algo38 = new ToyAlgo("hpsPFTauProducerSansRefs",0,0);
    algo38->produces("hpsPFTauProducerSansRefs");
    algo38->reads("hpsSelectionDiscriminator");
    algo38->reads("combinatoricRecoTaus");
    algos.push_back(algo38);
    AlgoBase* algo39 = new ToyAlgo("ak7BasicJets",0,0);
    algo39->produces("ak7BasicJets");
    algo39->reads("CastorTowerReco");
    algo39->reads("offlinePrimaryVertices");
    algos.push_back(algo39);
    AlgoBase* algo40 = new ToyAlgo("pixelPairStepTracks",0,0);
    algo40->produces("pixelPairStepTracks");
    algo40->reads("pixelPairStepTrackCandidates");
    algo40->reads("offlineBeamSpot");
    algos.push_back(algo40);
    AlgoBase* algo41 = new ToyAlgo("met",0,0);
    algo41->produces("met");
    algo41->reads("towerMaker");
    algos.push_back(algo41);
    AlgoBase* algo42 = new ToyAlgo("electronCkfTrackCandidates",0,0);
    algo42->produces("electronCkfTrackCandidates");
    algo42->reads("electronMergedSeeds");
    algos.push_back(algo42);
    AlgoBase* algo43 = new ToyAlgo("shrinkingConePFTauDiscriminationByTaNCfrOnePercent",0,0);
    algo43->produces("shrinkingConePFTauDiscriminationByTaNCfrOnePercent");
    algo43->reads("shrinkingConePFTauProducer");
    algo43->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo43->reads("shrinkingConePFTauDiscriminationByTaNC");
    algos.push_back(algo43);
    AlgoBase* algo44 = new ToyAlgo("BeamHaloSummary",0,0);
    algo44->produces("BeamHaloSummary");
    algo44->reads("GlobalHaloData");
    algo44->reads("HcalHaloData");
    algo44->reads("CSCHaloData");
    algo44->reads("EcalHaloData");
    algos.push_back(algo44);
    AlgoBase* algo45 = new ToyAlgo("ghostTrackBJetTags",0,0);
    algo45->produces("ghostTrackBJetTags");
    algo45->reads("impactParameterTagInfos");
    algos.push_back(algo45);
    AlgoBase* algo46 = new ToyAlgo("detachedTripletStepTrackCandidates",0,0);
    algo46->produces("detachedTripletStepTrackCandidates");
    algo46->reads("detachedTripletStepSeeds");
    algos.push_back(algo46);
    AlgoBase* algo47 = new ToyAlgo("particleFlowDisplacedVertexCandidate",0,0);
    algo47->produces("particleFlowDisplacedVertexCandidate");
    algo47->reads("generalTracks");
    algo47->reads("offlinePrimaryVertices");
    algo47->reads("offlineBeamSpot");
    algos.push_back(algo47);
    AlgoBase* algo48 = new ToyAlgo("scalersRawToDigi",0,0);
    algo48->produces("scalersRawToDigi");
    algo48->reads("rawDataCollector");
    algos.push_back(algo48);
    AlgoBase* algo49 = new ToyAlgo("caloRecoTauDiscriminationByLeadingTrackFinding",0,0);
    algo49->produces("caloRecoTauDiscriminationByLeadingTrackFinding");
    algo49->reads("caloRecoTauProducer");
    algos.push_back(algo49);
    AlgoBase* algo50 = new ToyAlgo("hpsPFTauDiscriminationByMediumIsolationDBSumPtCorr",0,0);
    algo50->produces("hpsPFTauDiscriminationByMediumIsolationDBSumPtCorr");
    algo50->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo50->reads("hpsPFTauDiscriminationByMediumChargedIsolation");
    algo50->reads("kt6PFJets");
    algo50->reads("hpsPFTauProducer");
    algo50->reads("offlinePrimaryVertices");
    algo50->reads("particleFlow");
    algos.push_back(algo50);
    AlgoBase* algo51 = new ToyAlgo("uncleanedOnlyInOutOutInConversionTrackMerger",0,0);
    algo51->produces("uncleanedOnlyInOutOutInConversionTrackMerger");
    algos.push_back(algo51);
    AlgoBase* algo52 = new ToyAlgo("ckfOutInTracksFromConversions",0,0);
    algo52->produces("ckfOutInTracksFromConversions");
    algo52->reads("conversionTrackCandidates");
    algo52->reads("offlineBeamSpot");
    algos.push_back(algo52);
    AlgoBase* algo53 = new ToyAlgo("eidLoose",0,0);
    algo53->produces("eidLoose");
    algo53->reads("offlinePrimaryVerticesWithBS");
    algo53->reads("ecalRecHit");
    algo53->reads("gsfElectrons");
    algos.push_back(algo53);
    AlgoBase* algo54 = new ToyAlgo("ak5PFJetTracksAssociatorAtVertex",0,0);
    algo54->produces("ak5PFJetTracksAssociatorAtVertex");
    algo54->reads("generalTracks");
    algo54->reads("ak5PFJets");
    algo54->reads("offlinePrimaryVertices");
    algos.push_back(algo54);
    AlgoBase* algo55 = new ToyAlgo("pixelPairStepClusters",0,0);
    algo55->produces("pixelPairStepClusters");
    algo55->reads("lowPtTripletStepClusters");
    algo55->reads("lowPtTripletStepTracks");
    algo55->reads("siStripClusters");
    algo55->reads("siPixelClusters");
    algo55->reads("lowPtTripletStepSelector");
    algos.push_back(algo55);
    AlgoBase* algo56 = new ToyAlgo("hpsPFTauDiscriminationByVLooseIsolation",0,0);
    algo56->produces("hpsPFTauDiscriminationByVLooseIsolation");
    algo56->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo56->reads("hpsPFTauProducer");
    algo56->reads("kt6PFJets");
    algo56->reads("hpsPFTauDiscriminationByVLooseChargedIsolation");
    algo56->reads("offlinePrimaryVertices");
    algo56->reads("particleFlow");
    algos.push_back(algo56);
    AlgoBase* algo57 = new ToyAlgo("JPTeidTight",0,0);
    algo57->produces("JPTeidTight");
    algo57->reads("offlinePrimaryVerticesWithBS");
    algo57->reads("ecalRecHit");
    algo57->reads("gsfElectrons");
    algos.push_back(algo57);
    AlgoBase* algo58 = new ToyAlgo("mixedTripletStepTrackCandidates",0,0);
    algo58->produces("mixedTripletStepTrackCandidates");
    algo58->reads("mixedTripletStepSeeds");
    algos.push_back(algo58);
    AlgoBase* algo59 = new ToyAlgo("rawDataCollector",0,0);
    algo59->produces("rawDataCollector");
    algos.push_back(algo59);
    AlgoBase* algo60 = new ToyAlgo("muidTMLastStationAngTight",0,0);
    algo60->produces("muidTMLastStationAngTight");
    algo60->reads("muons1stStep");
    algos.push_back(algo60);
    AlgoBase* algo61 = new ToyAlgo("generalTracks",0,0);
    algo61->produces("generalTracks");
    algo61->reads("initialStepSelector");
    algo61->reads("initialStepTracks");
    algos.push_back(algo61);
    AlgoBase* algo62 = new ToyAlgo("shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion",0,0);
    algo62->produces("shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion");
    algo62->reads("shrinkingConePFTauProducer");
    algo62->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo62->reads("offlinePrimaryVertices");
    algos.push_back(algo62);
    AlgoBase* algo63 = new ToyAlgo("secondaryVertexTagInfos",0,0);
    algo63->produces("secondaryVertexTagInfos");
    algo63->reads("impactParameterTagInfos");
    algo63->reads("offlineBeamSpot");
    algos.push_back(algo63);
    AlgoBase* algo64 = new ToyAlgo("convStepSelector",0,0);
    algo64->produces("convStepSelector");
    algo64->reads("pixelVertices");
    algo64->reads("convStepTracks");
    algo64->reads("offlineBeamSpot");
    algos.push_back(algo64);
    AlgoBase* algo65 = new ToyAlgo("muonShowerInformation",0,0);
    algo65->produces("muonShowerInformation");
    algo65->reads("cscSegments");
    algo65->reads("generalTracks");
    algo65->reads("rpcRecHits");
    algo65->reads("csc2DRecHits");
    algo65->reads("dt4DSegments");
    algo65->reads("muons1stStep");
    algo65->reads("dt1DRecHits");
    algos.push_back(algo65);
    AlgoBase* algo66 = new ToyAlgo("globalMuons",0,0);
    algo66->produces("globalMuons");
    algo66->reads("cscSegments");
    algo66->reads("generalTracks");
    algo66->reads("offlineBeamSpot");
    algo66->reads("standAloneMuons");
    algo66->reads("pixelVertices");
    algo66->reads("dt4DSegments");
    algos.push_back(algo66);
    AlgoBase* algo67 = new ToyAlgo("trackRefsForJets",0,0);
    algo67->produces("trackRefsForJets");
    algo67->reads("trackWithVertexRefSelector");
    algos.push_back(algo67);
    AlgoBase* algo68 = new ToyAlgo("hpsTancTausDiscriminationByTightMuonRejection",0,0);
    algo68->produces("hpsTancTausDiscriminationByTightMuonRejection");
    algo68->reads("hpsTancTaus");
    algos.push_back(algo68);
    AlgoBase* algo69 = new ToyAlgo("hpsPFTauDiscriminationByTightIsolationDBSumPtCorr",0,0);
    algo69->produces("hpsPFTauDiscriminationByTightIsolationDBSumPtCorr");
    algo69->reads("hpsPFTauDiscriminationByTightChargedIsolation");
    algo69->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo69->reads("kt6PFJets");
    algo69->reads("hpsPFTauProducer");
    algo69->reads("offlinePrimaryVertices");
    algo69->reads("particleFlow");
    algos.push_back(algo69);
    AlgoBase* algo70 = new ToyAlgo("hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr",0,0);
    algo70->produces("hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr");
    algo70->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo70->reads("hpsPFTauProducer");
    algo70->reads("offlinePrimaryVertices");
    algo70->reads("kt6PFJets");
    algo70->reads("particleFlow");
    algos.push_back(algo70);
    AlgoBase* algo71 = new ToyAlgo("hltL1GtObjectMap",0,0);
    algo71->produces("hltL1GtObjectMap");
    algos.push_back(algo71);
    AlgoBase* algo72 = new ToyAlgo("ak5JetID",0,0);
    algo72->produces("ak5JetID");
    algo72->reads("horeco");
    algo72->reads("ak5CaloJets");
    algo72->reads("rpcRecHits");
    algo72->reads("hbhereco");
    algo72->reads("hfreco");
    algo72->reads("ecalRecHit");
    algos.push_back(algo72);
    AlgoBase* algo73 = new ToyAlgo("uncleanedOnlyCorrectedHybridSuperClusters",0,0);
    algo73->produces("uncleanedOnlyCorrectedHybridSuperClusters");
    algo73->reads("ecalRecHit");
    algo73->reads("hybridSuperClusters");
    algos.push_back(algo73);
    AlgoBase* algo74 = new ToyAlgo("kt6PFJetsCentralNeutralTight",0,0);
    algo74->produces("kt6PFJetsCentralNeutralTight");
    algo74->reads("pfAllNeutralHadronsAndPhotons");
    algos.push_back(algo74);
    AlgoBase* algo75 = new ToyAlgo("hpsPFTauDiscriminationByMediumElectronRejection",0,0);
    algo75->produces("hpsPFTauDiscriminationByMediumElectronRejection");
    algo75->reads("hpsPFTauProducer");
    algos.push_back(algo75);
    AlgoBase* algo76 = new ToyAlgo("shrinkingConePFTauDiscriminationByTrackIsolation",0,0);
    algo76->produces("shrinkingConePFTauDiscriminationByTrackIsolation");
    algo76->reads("shrinkingConePFTauProducer");
    algo76->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo76->reads("offlinePrimaryVertices");
    algos.push_back(algo76);
    AlgoBase* algo77 = new ToyAlgo("caloRecoTauDiscriminationAgainstMuon",0,0);
    algo77->produces("caloRecoTauDiscriminationAgainstMuon");
    algo77->reads("muons");
    algo77->reads("caloRecoTauDiscriminationByLeadingTrackFinding");
    algo77->reads("caloRecoTauProducer");
    algos.push_back(algo77);
    AlgoBase* algo78 = new ToyAlgo("regionalCosmicCkfTrackCandidates",0,0);
    algo78->produces("regionalCosmicCkfTrackCandidates");
    algo78->reads("regionalCosmicTrackerSeeds");
    algos.push_back(algo78);
    AlgoBase* algo79 = new ToyAlgo("mixedTripletStepTracks",0,0);
    algo79->produces("mixedTripletStepTracks");
    algo79->reads("mixedTripletStepTrackCandidates");
    algo79->reads("offlineBeamSpot");
    algos.push_back(algo79);
    AlgoBase* algo80 = new ToyAlgo("pfAllPhotons",0,0);
    algo80->produces("pfAllPhotons");
    algo80->reads("pfNoPileUp");
    algos.push_back(algo80);
    AlgoBase* algo81 = new ToyAlgo("uncleanedOnlyGeneralInOutOutInConversionTrackMerger",0,0);
    algo81->produces("uncleanedOnlyGeneralInOutOutInConversionTrackMerger");
    algos.push_back(algo81);
    AlgoBase* algo82 = new ToyAlgo("tobTecStepClusters",0,0);
    algo82->produces("tobTecStepClusters");
    algo82->reads("pixelLessStepTracks");
    algo82->reads("pixelLessStepSelector");
    algo82->reads("siStripClusters");
    algo82->reads("pixelLessStepClusters");
    algo82->reads("siPixelClusters");
    algos.push_back(algo82);
    AlgoBase* algo83 = new ToyAlgo("dt1DRecHits",0,0);
    algo83->produces("dt1DRecHits");
    algo83->reads("muonDTDigis");
    algos.push_back(algo83);
    AlgoBase* algo84 = new ToyAlgo("cosmicMuons1Leg",0,0);
    algo84->produces("cosmicMuons1Leg");
    algo84->reads("cscSegments");
    algo84->reads("rpcRecHits");
    algo84->reads("dt4DCosmicSegments");
    algo84->reads("offlineBeamSpot");
    algos.push_back(algo84);
    AlgoBase* algo85 = new ToyAlgo("metNoHF",0,0);
    algo85->produces("metNoHF");
    algo85->reads("towerMaker");
    algos.push_back(algo85);
    AlgoBase* algo86 = new ToyAlgo("recoTauAK5PFJets08Region",0,0);
    algo86->produces("recoTauAK5PFJets08Region");
    algo86->reads("ak5PFJets");
    algo86->reads("particleFlow");
    algos.push_back(algo86);
    AlgoBase* algo87 = new ToyAlgo("ak5TrackJets",0,0);
    algo87->produces("ak5TrackJets");
    algo87->reads("trackRefsForJets");
    algo87->reads("offlinePrimaryVertices");
    algos.push_back(algo87);
    AlgoBase* algo88 = new ToyAlgo("dt4DSegments",0,0);
    algo88->produces("dt4DSegments");
    algo88->reads("dt1DRecHits");
    algos.push_back(algo88);
    AlgoBase* algo89 = new ToyAlgo("combinedSecondaryVertexBJetTags",0,0);
    algo89->produces("combinedSecondaryVertexBJetTags");
    algo89->reads("impactParameterTagInfos");
    algos.push_back(algo89);
    AlgoBase* algo90 = new ToyAlgo("tobTecStepTrackCandidates",0,0);
    algo90->produces("tobTecStepTrackCandidates");
    algo90->reads("tobTecStepSeeds");
    algos.push_back(algo90);
    AlgoBase* algo91 = new ToyAlgo("conversionTrackCandidates",0,0);
    algo91->produces("conversionTrackCandidates");
    algo91->reads("multi5x5SuperClusters");
    algo91->reads("correctedMulti5x5SuperClustersWithPreshower");
    algo91->reads("correctedHybridSuperClusters");
    algo91->reads("ecalRecHit");
    algo91->reads("hybridSuperClusters");
    algo91->reads("towerMaker");
    algos.push_back(algo91);
    AlgoBase* algo92 = new ToyAlgo("uncleanedOnlyGsfElectrons",0,0);
    algo92->produces("uncleanedOnlyGsfElectrons");
    algo92->reads("generalTracks");
    algo92->reads("offlineBeamSpot");
    algo92->reads("uncleanedOnlyGsfElectronCores");
    algo92->reads("uncleanedOnlyPfTrackElec");
    algo92->reads("uncleanedOnlyElectronSeeds");
    algo92->reads("ecalRecHit");
    algo92->reads("towerMaker");
    algos.push_back(algo92);
    AlgoBase* algo93 = new ToyAlgo("softMuonByPtBJetTags",0,0);
    algo93->produces("softMuonByPtBJetTags");
    algo93->reads("softMuonTagInfos");
    algos.push_back(algo93);
    AlgoBase* algo94 = new ToyAlgo("ckfInOutTracksFromConversions",0,0);
    algo94->produces("ckfInOutTracksFromConversions");
    algo94->reads("conversionTrackCandidates");
    algo94->reads("offlineBeamSpot");
    algos.push_back(algo94);
    AlgoBase* algo95 = new ToyAlgo("caloRecoTauDiscriminationByIsolation",0,0);
    algo95->produces("caloRecoTauDiscriminationByIsolation");
    algo95->reads("caloRecoTauDiscriminationByLeadingTrackFinding");
    algo95->reads("caloRecoTauProducer");
    algos.push_back(algo95);
    AlgoBase* algo96 = new ToyAlgo("hpsPFTauDiscriminationByRawChargedIsolationDBSumPtCorr",0,0);
    algo96->produces("hpsPFTauDiscriminationByRawChargedIsolationDBSumPtCorr");
    algo96->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo96->reads("hpsPFTauProducer");
    algo96->reads("offlinePrimaryVertices");
    algo96->reads("kt6PFJets");
    algo96->reads("particleFlow");
    algos.push_back(algo96);
    AlgoBase* algo97 = new ToyAlgo("ancientMuonSeed",0,0);
    algo97->produces("ancientMuonSeed");
    algo97->reads("cscSegments");
    algo97->reads("dt4DSegments");
    algo97->reads("offlineBeamSpot");
    algos.push_back(algo97);
    AlgoBase* algo98 = new ToyAlgo("kt6PFJetsCentralChargedPileUp",0,0);
    algo98->produces("kt6PFJetsCentralChargedPileUp");
    algo98->reads("pfPileUpAllChargedParticles");
    algos.push_back(algo98);
    AlgoBase* algo99 = new ToyAlgo("initialStepSelector",0,0);
    algo99->produces("initialStepSelector");
    algo99->reads("pixelVertices");
    algo99->reads("initialStepTracks");
    algo99->reads("offlineBeamSpot");
    algos.push_back(algo99);
    AlgoBase* algo100 = new ToyAlgo("electronsCiCLoose",0,0);
    algo100->produces("electronsCiCLoose");
    algo100->reads("electronsWithPresel");
    algo100->reads("offlinePrimaryVertices");
    algo100->reads("reducedEcalRecHitsEB");
    algos.push_back(algo100);
    AlgoBase* algo101 = new ToyAlgo("gtEvmDigis",0,0);
    algo101->produces("gtEvmDigis");
    algo101->reads("rawDataCollector");
    algos.push_back(algo101);
    AlgoBase* algo102 = new ToyAlgo("hpsTancTausDiscriminationByDecayModeSelection",0,0);
    algo102->produces("hpsTancTausDiscriminationByDecayModeSelection");
    algo102->reads("hpsTancTaus");
    algo102->reads("combinatoricRecoTaus");
    algos.push_back(algo102);
    AlgoBase* algo103 = new ToyAlgo("kt4JetTracksAssociatorAtCaloFace",0,0);
    algo103->produces("kt4JetTracksAssociatorAtCaloFace");
    algo103->reads("kt4CaloJets");
    algo103->reads("trackExtrapolator");
    algo103->reads("generalTracks");
    algos.push_back(algo103);
    AlgoBase* algo104 = new ToyAlgo("JPTAntiKt5JetTracksAssociatorAtVertex",0,0);
    algo104->produces("JPTAntiKt5JetTracksAssociatorAtVertex");
    algo104->reads("generalTracks");
    algo104->reads("TCTauJetPlusTrackZSPCorJetAntiKt5");
    algo104->reads("offlinePrimaryVertices");
    algos.push_back(algo104);
    AlgoBase* algo105 = new ToyAlgo("reducedHcalRecHits",0,0);
    algo105->produces("reducedHcalRecHits");
    algo105->reads("horeco");
    algo105->reads("hfreco");
    algo105->reads("hbhereco");
    algos.push_back(algo105);
    AlgoBase* algo106 = new ToyAlgo("particleFlowClusterHFHAD",0,0);
    algo106->produces("particleFlowClusterHFHAD");
    algo106->reads("particleFlowRecHitHCAL");
    algos.push_back(algo106);
    AlgoBase* algo107 = new ToyAlgo("hpsTancTausDiscriminationByTancTight",0,0);
    algo107->produces("hpsTancTausDiscriminationByTancTight");
    algo107->reads("hpsTancTaus");
    algo107->reads("hpsTancTausDiscriminationByTanc");
    algos.push_back(algo107);
    AlgoBase* algo108 = new ToyAlgo("regionalCosmicTracks",0,0);
    algo108->produces("regionalCosmicTracks");
    algo108->reads("regionalCosmicCkfTrackCandidates");
    algo108->reads("offlineBeamSpot");
    algos.push_back(algo108);
    AlgoBase* algo109 = new ToyAlgo("standAloneMuons",0,0);
    algo109->produces("standAloneMuons");
    algo109->reads("cscSegments");
    algo109->reads("offlineBeamSpot");
    algo109->reads("ancientMuonSeed");
    algo109->reads("dt4DSegments");
    algo109->reads("rpcRecHits");
    algos.push_back(algo109);
    AlgoBase* algo110 = new ToyAlgo("muonDTDigis",0,0);
    algo110->produces("muonDTDigis");
    algo110->reads("rawDataCollector");
    algos.push_back(algo110);
    AlgoBase* algo111 = new ToyAlgo("siPixelRecHits",0,0);
    algo111->produces("siPixelRecHits");
    algo111->reads("siPixelClusters");
    algos.push_back(algo111);
    AlgoBase* algo112 = new ToyAlgo("particleFlowClusterHCAL",0,0);
    algo112->produces("particleFlowClusterHCAL");
    algo112->reads("particleFlowRecHitHCAL");
    algos.push_back(algo112);
    AlgoBase* algo113 = new ToyAlgo("shrinkingConePFTauDiscriminationByLeadingPionPtCut",0,0);
    algo113->produces("shrinkingConePFTauDiscriminationByLeadingPionPtCut");
    algo113->reads("shrinkingConePFTauProducer");
    algos.push_back(algo113);
    AlgoBase* algo114 = new ToyAlgo("electronGsfTracks",0,0);
    algo114->produces("electronGsfTracks");
    algo114->reads("electronCkfTrackCandidates");
    algo114->reads("offlineBeamSpot");
    algos.push_back(algo114);
    AlgoBase* algo115 = new ToyAlgo("multi5x5BasicClustersUncleaned",0,0);
    algo115->produces("multi5x5BasicClustersUncleaned");
    algos.push_back(algo115);
    AlgoBase* algo116 = new ToyAlgo("pfTrack",0,0);
    algo116->produces("pfTrack");
    algo116->reads("generalTracks");
    algo116->reads("muons1stStep");
    algo116->reads("electronGsfTracks");
    algo116->reads("offlinePrimaryVertices");
    algos.push_back(algo116);
    AlgoBase* algo117 = new ToyAlgo("particleFlow",0,0);
    algo117->produces("particleFlow");
    algo117->reads("muons");
    algo117->reads("pfPhotonTranslator");
    algo117->reads("gsfElectrons");
    algo117->reads("particleFlowTmp");
    algos.push_back(algo117);
    AlgoBase* algo118 = new ToyAlgo("ak7PFJets",0,0);
    algo118->produces("ak7PFJets");
    algo118->reads("particleFlow");
    algos.push_back(algo118);
    AlgoBase* algo119 = new ToyAlgo("muPFIsoDepositCharged",0,0);
    algo119->produces("muPFIsoDepositCharged");
    algo119->reads("muons1stStep");
    algo119->reads("pfAllChargedHadrons");
    algos.push_back(algo119);
    AlgoBase* algo120 = new ToyAlgo("muidTMOneStationTight",0,0);
    algo120->produces("muidTMOneStationTight");
    algo120->reads("muons1stStep");
    algos.push_back(algo120);
    AlgoBase* algo121 = new ToyAlgo("conversionStepConversionTrackProducer",0,0);
    algo121->produces("conversionStepConversionTrackProducer");
    algo121->reads("offlineBeamSpot");
    algos.push_back(algo121);
    AlgoBase* algo122 = new ToyAlgo("allConversions",0,0);
    algo122->produces("allConversions");
    algo122->reads("correctedHybridSuperClusters");
    algo122->reads("multi5x5SuperClusters");
    algo122->reads("gsfGeneralInOutOutInConversionTrackMerger");
    algo122->reads("hybridSuperClusters");
    algo122->reads("correctedMulti5x5SuperClustersWithPreshower");
    algos.push_back(algo122);
    AlgoBase* algo123 = new ToyAlgo("reducedEcalRecHitsES",0,0);
    algo123->produces("reducedEcalRecHitsES");
    algo123->reads("ecalPreshowerRecHit");
    algo123->reads("correctedMulti5x5SuperClustersWithPreshower");
    algos.push_back(algo123);
    AlgoBase* algo124 = new ToyAlgo("reducedEcalRecHitsEE",0,0);
    algo124->produces("reducedEcalRecHitsEE");
    algo124->reads("ecalRecHit");
    algo124->reads("interestingEcalDetIdEE");
    algos.push_back(algo124);
    AlgoBase* algo125 = new ToyAlgo("gsfConversionTrackProducer",0,0);
    algo125->produces("gsfConversionTrackProducer");
    algo125->reads("offlineBeamSpot");
    algos.push_back(algo125);
    AlgoBase* algo126 = new ToyAlgo("l1extraParticles",0,0);
    algo126->produces("l1extraParticles");
    algo126->reads("gctDigis");
    algo126->reads("gtDigis");
    algos.push_back(algo126);
    AlgoBase* algo127 = new ToyAlgo("shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent",0,0);
    algo127->produces("shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent");
    algo127->reads("shrinkingConePFTauProducer");
    algo127->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo127->reads("shrinkingConePFTauDiscriminationByTaNC");
    algos.push_back(algo127);
    AlgoBase* algo128 = new ToyAlgo("interestingEleIsoDetIdEB",0,0);
    algo128->produces("interestingEleIsoDetIdEB");
    algo128->reads("ecalRecHit");
    algo128->reads("gsfElectrons");
    algos.push_back(algo128);
    AlgoBase* algo129 = new ToyAlgo("interestingEleIsoDetIdEE",0,0);
    algo129->produces("interestingEleIsoDetIdEE");
    algo129->reads("ecalRecHit");
    algo129->reads("gsfElectrons");
    algos.push_back(algo129);
    AlgoBase* algo130 = new ToyAlgo("shrinkingConePFTauDiscriminationByLeadingTrackPtCut",0,0);
    algo130->produces("shrinkingConePFTauDiscriminationByLeadingTrackPtCut");
    algo130->reads("shrinkingConePFTauProducer");
    algos.push_back(algo130);
    AlgoBase* algo131 = new ToyAlgo("hpsPFTauDiscriminationByRawGammaIsolationDBSumPtCorr",0,0);
    algo131->produces("hpsPFTauDiscriminationByRawGammaIsolationDBSumPtCorr");
    algo131->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo131->reads("hpsPFTauProducer");
    algo131->reads("offlinePrimaryVertices");
    algo131->reads("kt6PFJets");
    algo131->reads("particleFlow");
    algos.push_back(algo131);
    AlgoBase* algo132 = new ToyAlgo("offlinePrimaryVertices",0,0);
    algo132->produces("offlinePrimaryVertices");
    algo132->reads("generalTracks");
    algo132->reads("offlineBeamSpot");
    algos.push_back(algo132);
    AlgoBase* algo133 = new ToyAlgo("eidTight",0,0);
    algo133->produces("eidTight");
    algo133->reads("offlinePrimaryVerticesWithBS");
    algo133->reads("ecalRecHit");
    algo133->reads("gsfElectrons");
    algos.push_back(algo133);
    AlgoBase* algo134 = new ToyAlgo("lowPtTripletStepTrackCandidates",0,0);
    algo134->produces("lowPtTripletStepTrackCandidates");
    algo134->reads("lowPtTripletStepSeeds");
    algos.push_back(algo134);
    AlgoBase* algo135 = new ToyAlgo("hpsPFTauDiscriminationByLooseIsolation",0,0);
    algo135->produces("hpsPFTauDiscriminationByLooseIsolation");
    algo135->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo135->reads("hpsPFTauDiscriminationByLooseChargedIsolation");
    algo135->reads("kt6PFJets");
    algo135->reads("hpsPFTauProducer");
    algo135->reads("offlinePrimaryVertices");
    algo135->reads("particleFlow");
    algos.push_back(algo135);
    AlgoBase* algo136 = new ToyAlgo("ak5CaloJets",0,0);
    algo136->produces("ak5CaloJets");
    algo136->reads("offlinePrimaryVertices");
    algo136->reads("towerMaker");
    algos.push_back(algo136);
    AlgoBase* algo137 = new ToyAlgo("phPFIsoValueCharged04",0,0);
    algo137->produces("phPFIsoValueCharged04");
    algo137->reads("phPFIsoDepositCharged");
    algos.push_back(algo137);
    AlgoBase* algo138 = new ToyAlgo("shrinkingConePFTauProducer",0,0);
    algo138->produces("shrinkingConePFTauProducer");
    algo138->reads("pfRecoTauTagInfoProducer");
    algo138->reads("shrinkingConePFTauProducerSansRefs");
    algo138->reads("offlinePrimaryVertices");
    algo138->reads("particleFlow");
    algos.push_back(algo138);
    AlgoBase* algo139 = new ToyAlgo("kt4JetTracksAssociatorAtVertex",0,0);
    algo139->produces("kt4JetTracksAssociatorAtVertex");
    algo139->reads("generalTracks");
    algo139->reads("kt4CaloJets");
    algo139->reads("offlinePrimaryVertices");
    algos.push_back(algo139);
    AlgoBase* algo140 = new ToyAlgo("detachedTripletStepSelector",0,0);
    algo140->produces("detachedTripletStepSelector");
    algo140->reads("pixelVertices");
    algo140->reads("detachedTripletStepTracks");
    algo140->reads("offlineBeamSpot");
    algos.push_back(algo140);
    AlgoBase* algo141 = new ToyAlgo("pfDisplacedTrackerVertex",0,0);
    algo141->produces("pfDisplacedTrackerVertex");
    algo141->reads("generalTracks");
    algo141->reads("particleFlowDisplacedVertex");
    algos.push_back(algo141);
    AlgoBase* algo142 = new ToyAlgo("hcalDigis",0,0);
    algo142->produces("hcalDigis");
    algo142->reads("rawDataCollector");
    algos.push_back(algo142);
    AlgoBase* algo143 = new ToyAlgo("hpsPFTauDiscriminationByTightChargedIsolation",0,0);
    algo143->produces("hpsPFTauDiscriminationByTightChargedIsolation");
    algo143->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo143->reads("hpsPFTauDiscriminationByMediumChargedIsolation");
    algo143->reads("kt6PFJets");
    algo143->reads("hpsPFTauProducer");
    algo143->reads("offlinePrimaryVertices");
    algo143->reads("particleFlow");
    algos.push_back(algo143);
    AlgoBase* algo144 = new ToyAlgo("muidTM2DCompatibilityLoose",0,0);
    algo144->produces("muidTM2DCompatibilityLoose");
    algo144->reads("muons1stStep");
    algos.push_back(algo144);
    AlgoBase* algo145 = new ToyAlgo("combinatoricRecoTausDiscriminationByLeadingPionPtCut",0,0);
    algo145->produces("combinatoricRecoTausDiscriminationByLeadingPionPtCut");
    algo145->reads("combinatoricRecoTaus");
    algos.push_back(algo145);
    AlgoBase* algo146 = new ToyAlgo("ecalDigis",0,0);
    algo146->produces("ecalDigis");
    algo146->reads("rawDataCollector");
    algos.push_back(algo146);
    AlgoBase* algo147 = new ToyAlgo("dt1DCosmicRecHits",0,0);
    algo147->produces("dt1DCosmicRecHits");
    algo147->reads("muonDTDigis");
    algos.push_back(algo147);
    AlgoBase* algo148 = new ToyAlgo("inOutConversionTrackProducer",0,0);
    algo148->produces("inOutConversionTrackProducer");
    algo148->reads("offlineBeamSpot");
    algos.push_back(algo148);
    AlgoBase* algo149 = new ToyAlgo("mixedTripletStepSeeds",0,0);
    algo149->produces("mixedTripletStepSeeds");
    algo149->reads("mixedTripletStepSeedsA");
    algos.push_back(algo149);
    AlgoBase* algo150 = new ToyAlgo("ak7CastorJetID",0,0);
    algo150->produces("ak7CastorJetID");
    algo150->reads("ak7BasicJets");
    algos.push_back(algo150);
    AlgoBase* algo151 = new ToyAlgo("pixelPairStepSeeds",0,0);
    algo151->produces("pixelPairStepSeeds");
    algo151->reads("pixelVertices");
    algo151->reads("siStripClusters");
    algo151->reads("siPixelClusters");
    algo151->reads("offlineBeamSpot");
    algos.push_back(algo151);
    AlgoBase* algo152 = new ToyAlgo("particleFlowBlock",0,0);
    algo152->produces("particleFlowBlock");
    algo152->reads("particleFlowClusterECAL");
    algo152->reads("particleFlowClusterPS");
    algo152->reads("particleFlowClusterHFHAD");
    algo152->reads("photons");
    algo152->reads("pfTrackElec");
    algo152->reads("pfConversions");
    algo152->reads("particleFlowClusterHO");
    algo152->reads("particleFlowClusterHFEM");
    algo152->reads("pfDisplacedTrackerVertex");
    algo152->reads("muons1stStep");
    algo152->reads("particleFlowClusterHCAL");
    algo152->reads("pfTrack");
    algos.push_back(algo152);
    AlgoBase* algo153 = new ToyAlgo("muidGMTkKinkTight",0,0);
    algo153->produces("muidGMTkKinkTight");
    algo153->reads("muons1stStep");
    algos.push_back(algo153);
    AlgoBase* algo154 = new ToyAlgo("elPFIsoValueNeutral04",0,0);
    algo154->produces("elPFIsoValueNeutral04");
    algo154->reads("elPFIsoDepositNeutral");
    algos.push_back(algo154);
    AlgoBase* algo155 = new ToyAlgo("uncleanedOnlyGsfElectronCores",0,0);
    algo155->produces("uncleanedOnlyGsfElectronCores");
    algo155->reads("generalTracks");
    algo155->reads("uncleanedOnlyPfTrackElec");
    algo155->reads("uncleanedOnlyElectronGsfTracks");
    algos.push_back(algo155);
    AlgoBase* algo156 = new ToyAlgo("muidTMLastStationOptimizedLowPtTight",0,0);
    algo156->produces("muidTMLastStationOptimizedLowPtTight");
    algo156->reads("muons1stStep");
    algos.push_back(algo156);
    AlgoBase* algo157 = new ToyAlgo("muons1stStep",0,0);
    algo157->produces("muons1stStep");
    algo157->reads("cscSegments");
    algo157->reads("generalTracks");
    algo157->reads("horeco");
    algo157->reads("glbTrackQual");
    algo157->reads("ak5CaloJets");
    algo157->reads("offlineBeamSpot");
    algo157->reads("hbhereco");
    algo157->reads("ecalRecHit");
    algo157->reads("dt4DSegments");
    algo157->reads("towerMaker");
    algos.push_back(algo157);
    AlgoBase* algo158 = new ToyAlgo("CosmicMuonSeed",0,0);
    algo158->produces("CosmicMuonSeed");
    algo158->reads("cscSegments");
    algo158->reads("dt4DCosmicSegments");
    algos.push_back(algo158);
    AlgoBase* algo159 = new ToyAlgo("muIsoDepositJets",0,0);
    algo159->produces("muIsoDepositJets");
    algo159->reads("muons1stStep");
    algos.push_back(algo159);
    AlgoBase* algo160 = new ToyAlgo("muIsoDepositTk",0,0);
    algo160->produces("muIsoDepositTk");
    algo160->reads("muons1stStep");
    algos.push_back(algo160);
    AlgoBase* algo161 = new ToyAlgo("generalInOutOutInConversionTrackMerger",0,0);
    algo161->produces("generalInOutOutInConversionTrackMerger");
    algos.push_back(algo161);
    AlgoBase* algo162 = new ToyAlgo("gsfElectrons",0,0);
    algo162->produces("gsfElectrons");
    algo162->reads("generalTracks");
    algo162->reads("ecalDrivenGsfElectrons");
    algo162->reads("offlineBeamSpot");
    algo162->reads("ecalDrivenElectronSeeds");
    algo162->reads("pfElectronTranslator");
    algo162->reads("pfTrackElec");
    algo162->reads("ecalRecHit");
    algo162->reads("gsfElectronCores");
    algo162->reads("towerMaker");
    algos.push_back(algo162);
    AlgoBase* algo163 = new ToyAlgo("tevMuons",0,0);
    algo163->produces("tevMuons");
    algo163->reads("offlineBeamSpot");
    algo163->reads("globalMuons");
    algo163->reads("csc2DRecHits");
    algo163->reads("dt1DRecHits");
    algo163->reads("rpcRecHits");
    algos.push_back(algo163);
    AlgoBase* algo164 = new ToyAlgo("rpcRecHits",0,0);
    algo164->produces("rpcRecHits");
    algo164->reads("muonRPCDigis");
    algos.push_back(algo164);
    AlgoBase* algo165 = new ToyAlgo("ecalRecHit",0,0);
    algo165->produces("ecalRecHit");
    algo165->reads("ecalDigis");
    algo165->reads("ecalDetIdToBeRecovered");
    algo165->reads("ecalGlobalUncalibRecHit");
    algos.push_back(algo165);
    AlgoBase* algo166 = new ToyAlgo("globalCosmicMuons",0,0);
    algo166->produces("globalCosmicMuons");
    algo166->reads("regionalCosmicTracks");
    algo166->reads("cosmicMuons");
    algo166->reads("offlineBeamSpot");
    algos.push_back(algo166);
    AlgoBase* algo167 = new ToyAlgo("multi5x5SuperClustersWithPreshower",0,0);
    algo167->produces("multi5x5SuperClustersWithPreshower");
    algo167->reads("multi5x5SuperClusters");
    algo167->reads("ecalPreshowerRecHit");
    algos.push_back(algo167);
    AlgoBase* algo168 = new ToyAlgo("dedxDiscrimASmi",0,0);
    algo168->produces("dedxDiscrimASmi");
    algo168->reads("generalTracks");
    algos.push_back(algo168);
    AlgoBase* algo169 = new ToyAlgo("hpsPFTauDiscriminationByTightElectronRejection",0,0);
    algo169->produces("hpsPFTauDiscriminationByTightElectronRejection");
    algo169->reads("hpsPFTauProducer");
    algos.push_back(algo169);
    AlgoBase* algo170 = new ToyAlgo("pixelPairStepTrackCandidates",0,0);
    algo170->produces("pixelPairStepTrackCandidates");
    algo170->reads("pixelPairStepSeeds");
    algos.push_back(algo170);
    AlgoBase* algo171 = new ToyAlgo("particleFlowRecHitPS",0,0);
    algo171->produces("particleFlowRecHitPS");
    algo171->reads("ecalPreshowerRecHit");
    algos.push_back(algo171);
    AlgoBase* algo172 = new ToyAlgo("jetBProbabilityBJetTags",0,0);
    algo172->produces("jetBProbabilityBJetTags");
    algo172->reads("impactParameterTagInfos");
    algos.push_back(algo172);
    AlgoBase* algo173 = new ToyAlgo("caloRecoTauDiscriminationAgainstElectron",0,0);
    algo173->produces("caloRecoTauDiscriminationAgainstElectron");
    algo173->reads("caloRecoTauDiscriminationByLeadingTrackFinding");
    algo173->reads("caloRecoTauProducer");
    algos.push_back(algo173);
    AlgoBase* algo174 = new ToyAlgo("pfAllChargedHadrons",0,0);
    algo174->produces("pfAllChargedHadrons");
    algo174->reads("pfNoPileUp");
    algos.push_back(algo174);
    AlgoBase* algo175 = new ToyAlgo("pixelPairStepSelector",0,0);
    algo175->produces("pixelPairStepSelector");
    algo175->reads("pixelVertices");
    algo175->reads("pixelPairStepTracks");
    algo175->reads("offlineBeamSpot");
    algos.push_back(algo175);
    AlgoBase* algo176 = new ToyAlgo("ak5JetExtender",0,0);
    algo176->produces("ak5JetExtender");
    algo176->reads("ak5CaloJets");
    algo176->reads("ak5JetTracksAssociatorAtVertex");
    algo176->reads("ak5JetTracksAssociatorAtCaloFace");
    algos.push_back(algo176);
    AlgoBase* algo177 = new ToyAlgo("hybridSuperClusters",0,0);
    algo177->produces("hybridSuperClusters");
    algo177->reads("uncleanedHybridSuperClusters");
    algo177->reads("cleanedHybridSuperClusters");
    algos.push_back(algo177);
    AlgoBase* algo178 = new ToyAlgo("softMuonByIP3dBJetTags",0,0);
    algo178->produces("softMuonByIP3dBJetTags");
    algo178->reads("softMuonTagInfos");
    algos.push_back(algo178);
    AlgoBase* algo179 = new ToyAlgo("cleanedHybridSuperClusters",0,0);
    algo179->produces("cleanedHybridSuperClusters");
    algos.push_back(algo179);
    AlgoBase* algo180 = new ToyAlgo("interestingTrackEcalDetIds",0,0);
    algo180->produces("interestingTrackEcalDetIds");
    algo180->reads("cscSegments");
    algo180->reads("generalTracks");
    algo180->reads("horeco");
    algo180->reads("hbhereco");
    algo180->reads("ecalRecHit");
    algo180->reads("dt4DSegments");
    algo180->reads("towerMaker");
    algos.push_back(algo180);
    AlgoBase* algo181 = new ToyAlgo("hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr",0,0);
    algo181->produces("hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr");
    algo181->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo181->reads("hpsPFTauProducer");
    algo181->reads("offlinePrimaryVertices");
    algo181->reads("kt6PFJets");
    algo181->reads("particleFlow");
    algos.push_back(algo181);
    AlgoBase* algo182 = new ToyAlgo("shrinkingConePFTauDiscriminationByTaNCfrHalfPercent",0,0);
    algo182->produces("shrinkingConePFTauDiscriminationByTaNCfrHalfPercent");
    algo182->reads("shrinkingConePFTauProducer");
    algo182->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo182->reads("shrinkingConePFTauDiscriminationByTaNC");
    algos.push_back(algo182);
    AlgoBase* algo183 = new ToyAlgo("pfPileUpAllChargedParticles",0,0);
    algo183->produces("pfPileUpAllChargedParticles");
    algo183->reads("pfPileUp");
    algos.push_back(algo183);
    AlgoBase* algo184 = new ToyAlgo("muidAllArbitrated",0,0);
    algo184->produces("muidAllArbitrated");
    algo184->reads("muons1stStep");
    algos.push_back(algo184);
    AlgoBase* algo185 = new ToyAlgo("pfSelectedPhotons",0,0);
    algo185->produces("pfSelectedPhotons");
    algo185->reads("particleFlowTmp");
    algos.push_back(algo185);
    AlgoBase* algo186 = new ToyAlgo("hltTriggerSummaryAOD",0,0);
    algo186->produces("hltTriggerSummaryAOD");
    algos.push_back(algo186);
    AlgoBase* algo187 = new ToyAlgo("muPFIsoValueChargedAll04",0,0);
    algo187->produces("muPFIsoValueChargedAll04");
    algo187->reads("muPFIsoDepositChargedAll");
    algos.push_back(algo187);
    AlgoBase* algo188 = new ToyAlgo("muPFIsoValueChargedAll03",0,0);
    algo188->produces("muPFIsoValueChargedAll03");
    algo188->reads("muPFIsoDepositChargedAll");
    algos.push_back(algo188);
    AlgoBase* algo189 = new ToyAlgo("hpsTancTausDiscriminationByTightIsolation",0,0);
    algo189->produces("hpsTancTausDiscriminationByTightIsolation");
    algo189->reads("hpsTancTaus");
    algo189->reads("offlinePrimaryVertices");
    algo189->reads("kt6PFJets");
    algo189->reads("particleFlow");
    algo189->reads("hpsTancTausDiscriminationByDecayModeSelection");
    algos.push_back(algo189);
    AlgoBase* algo190 = new ToyAlgo("eidRobustHighEnergy",0,0);
    algo190->produces("eidRobustHighEnergy");
    algo190->reads("offlinePrimaryVerticesWithBS");
    algo190->reads("ecalRecHit");
    algo190->reads("gsfElectrons");
    algos.push_back(algo190);
    AlgoBase* algo191 = new ToyAlgo("refittedStandAloneMuons",0,0);
    algo191->produces("refittedStandAloneMuons");
    algo191->reads("cscSegments");
    algo191->reads("offlineBeamSpot");
    algo191->reads("ancientMuonSeed");
    algo191->reads("dt4DSegments");
    algo191->reads("rpcRecHits");
    algos.push_back(algo191);
    AlgoBase* algo192 = new ToyAlgo("kt6JetID",0,0);
    algo192->produces("kt6JetID");
    algo192->reads("horeco");
    algo192->reads("kt6CaloJets");
    algo192->reads("rpcRecHits");
    algo192->reads("hbhereco");
    algo192->reads("hfreco");
    algo192->reads("ecalRecHit");
    algos.push_back(algo192);
    AlgoBase* algo193 = new ToyAlgo("tobTecStepTracks",0,0);
    algo193->produces("tobTecStepTracks");
    algo193->reads("tobTecStepTrackCandidates");
    algo193->reads("offlineBeamSpot");
    algos.push_back(algo193);
    AlgoBase* algo194 = new ToyAlgo("cosmicsVetoTracksRaw",0,0);
    algo194->produces("cosmicsVetoTracksRaw");
    algo194->reads("cosmicsVetoTrackCandidates");
    algo194->reads("offlineBeamSpot");
    algos.push_back(algo194);
    AlgoBase* algo195 = new ToyAlgo("uncleanedOnlyConversionTrackCandidates",0,0);
    algo195->produces("uncleanedOnlyConversionTrackCandidates");
    algo195->reads("multi5x5SuperClusters");
    algo195->reads("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower");
    algo195->reads("uncleanedOnlyCorrectedHybridSuperClusters");
    algo195->reads("ecalRecHit");
    algo195->reads("hybridSuperClusters");
    algo195->reads("towerMaker");
    algos.push_back(algo195);
    AlgoBase* algo196 = new ToyAlgo("pixelTracks",0,0);
    algo196->produces("pixelTracks");
    algo196->reads("offlineBeamSpot");
    algos.push_back(algo196);
    AlgoBase* algo197 = new ToyAlgo("GlobalHaloData",0,0);
    algo197->produces("GlobalHaloData");
    algo197->reads("EcalHaloData");
    algo197->reads("HcalHaloData");
    algo197->reads("met");
    algo197->reads("csc2DRecHits");
    algo197->reads("CSCHaloData");
    algo197->reads("towerMaker");
    algos.push_back(algo197);
    AlgoBase* algo198 = new ToyAlgo("cscSegments",0,0);
    algo198->produces("cscSegments");
    algo198->reads("csc2DRecHits");
    algos.push_back(algo198);
    AlgoBase* algo199 = new ToyAlgo("muPFIsoDepositNeutral",0,0);
    algo199->produces("muPFIsoDepositNeutral");
    algo199->reads("muons1stStep");
    algo199->reads("pfAllNeutralHadrons");
    algos.push_back(algo199);
    AlgoBase* algo200 = new ToyAlgo("caloRecoTauDiscriminationByLeadingTrackPtCut",0,0);
    algo200->produces("caloRecoTauDiscriminationByLeadingTrackPtCut");
    algo200->reads("caloRecoTauDiscriminationByLeadingTrackFinding");
    algo200->reads("caloRecoTauProducer");
    algos.push_back(algo200);
    AlgoBase* algo201 = new ToyAlgo("hpsPFTauDiscriminationByDecayModeFinding",0,0);
    algo201->produces("hpsPFTauDiscriminationByDecayModeFinding");
    algo201->reads("hpsPFTauProducer");
    algos.push_back(algo201);
    AlgoBase* algo202 = new ToyAlgo("electronMergedSeeds",0,0);
    algo202->produces("electronMergedSeeds");
    algo202->reads("ecalDrivenElectronSeeds");
    algo202->reads("trackerDrivenElectronSeeds");
    algos.push_back(algo202);
    AlgoBase* algo203 = new ToyAlgo("softElectronCands",0,0);
    algo203->produces("softElectronCands");
    algo203->reads("gsfElectrons");
    algos.push_back(algo203);
    AlgoBase* algo204 = new ToyAlgo("hfRecoEcalCandidate",0,0);
    algo204->produces("hfRecoEcalCandidate");
    algo204->reads("hfEMClusters");
    algos.push_back(algo204);
    AlgoBase* algo205 = new ToyAlgo("uncleanedOnlyElectronGsfTracks",0,0);
    algo205->produces("uncleanedOnlyElectronGsfTracks");
    algo205->reads("uncleanedOnlyElectronCkfTrackCandidates");
    algo205->reads("offlineBeamSpot");
    algos.push_back(algo205);
    AlgoBase* algo206 = new ToyAlgo("eidRobustTight",0,0);
    algo206->produces("eidRobustTight");
    algo206->reads("offlinePrimaryVerticesWithBS");
    algo206->reads("ecalRecHit");
    algo206->reads("gsfElectrons");
    algos.push_back(algo206);
    AlgoBase* algo207 = new ToyAlgo("hpsTancTausDiscriminationByLeadingPionPtCut",0,0);
    algo207->produces("hpsTancTausDiscriminationByLeadingPionPtCut");
    algo207->reads("hpsTancTaus");
    algos.push_back(algo207);
    AlgoBase* algo208 = new ToyAlgo("newCombinedSeeds",0,0);
    algo208->produces("newCombinedSeeds");
    algo208->reads("initialStepSeeds");
    algos.push_back(algo208);
    AlgoBase* algo209 = new ToyAlgo("metHO",0,0);
    algo209->produces("metHO");
    algo209->reads("towerMakerWithHO");
    algos.push_back(algo209);
    AlgoBase* algo210 = new ToyAlgo("gsfGeneralInOutOutInConversionTrackMerger",0,0);
    algo210->produces("gsfGeneralInOutOutInConversionTrackMerger");
    algos.push_back(algo210);
    AlgoBase* algo211 = new ToyAlgo("horeco",0,0);
    algo211->produces("horeco");
    algo211->reads("hcalDigis");
    algos.push_back(algo211);
    AlgoBase* algo212 = new ToyAlgo("multi5x5SuperClustersCleaned",0,0);
    algo212->produces("multi5x5SuperClustersCleaned");
    algos.push_back(algo212);
    AlgoBase* algo213 = new ToyAlgo("shrinkingConePFTauDiscriminationByTaNCfrTenthPercent",0,0);
    algo213->produces("shrinkingConePFTauDiscriminationByTaNCfrTenthPercent");
    algo213->reads("shrinkingConePFTauProducer");
    algo213->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo213->reads("shrinkingConePFTauDiscriminationByTaNC");
    algos.push_back(algo213);
    AlgoBase* algo214 = new ToyAlgo("lowPtTripletStepClusters",0,0);
    algo214->produces("lowPtTripletStepClusters");
    algo214->reads("initialStepSelector");
    algo214->reads("siStripClusters");
    algo214->reads("siPixelClusters");
    algo214->reads("initialStepTracks");
    algos.push_back(algo214);
    AlgoBase* algo215 = new ToyAlgo("hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr",0,0);
    algo215->produces("hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr");
    algo215->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo215->reads("hpsPFTauProducer");
    algo215->reads("offlinePrimaryVertices");
    algo215->reads("kt6PFJets");
    algo215->reads("particleFlow");
    algos.push_back(algo215);
    AlgoBase* algo216 = new ToyAlgo("dedxHarmonic2",0,0);
    algo216->produces("dedxHarmonic2");
    algo216->reads("generalTracks");
    algos.push_back(algo216);
    AlgoBase* algo217 = new ToyAlgo("lowPtTripletStepTracks",0,0);
    algo217->produces("lowPtTripletStepTracks");
    algo217->reads("lowPtTripletStepTrackCandidates");
    algo217->reads("offlineBeamSpot");
    algos.push_back(algo217);
    AlgoBase* algo218 = new ToyAlgo("uncleanedOnlyInOutConversionTrackProducer",0,0);
    algo218->produces("uncleanedOnlyInOutConversionTrackProducer");
    algo218->reads("offlineBeamSpot");
    algos.push_back(algo218);
    AlgoBase* algo219 = new ToyAlgo("interestingEcalDetIdEB",0,0);
    algo219->produces("interestingEcalDetIdEB");
    algo219->reads("ecalRecHit");
    algo219->reads("hybridSuperClusters");
    algos.push_back(algo219);
    AlgoBase* algo220 = new ToyAlgo("interestingEcalDetIdEE",0,0);
    algo220->produces("interestingEcalDetIdEE");
    algo220->reads("multi5x5SuperClusters");
    algo220->reads("ecalRecHit");
    algos.push_back(algo220);
    AlgoBase* algo221 = new ToyAlgo("cosmicMuons",0,0);
    algo221->produces("cosmicMuons");
    algo221->reads("cscSegments");
    algo221->reads("rpcRecHits");
    algo221->reads("dt4DCosmicSegments");
    algo221->reads("offlineBeamSpot");
    algos.push_back(algo221);
    AlgoBase* algo222 = new ToyAlgo("ecalDetIdToBeRecovered",0,0);
    algo222->produces("ecalDetIdToBeRecovered");
    algo222->reads("ecalDigis");
    algos.push_back(algo222);
    AlgoBase* algo223 = new ToyAlgo("shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion",0,0);
    algo223->produces("shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion");
    algo223->reads("shrinkingConePFTauProducer");
    algo223->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo223->reads("offlinePrimaryVertices");
    algo223->reads("kt6PFJets");
    algo223->reads("particleFlow");
    algos.push_back(algo223);
    AlgoBase* algo224 = new ToyAlgo("htMetAK7",0,0);
    algo224->produces("htMetAK7");
    algo224->reads("ak7CaloJets");
    algos.push_back(algo224);
    AlgoBase* algo225 = new ToyAlgo("htMetAK5",0,0);
    algo225->produces("htMetAK5");
    algo225->reads("ak5CaloJets");
    algos.push_back(algo225);
    AlgoBase* algo226 = new ToyAlgo("TCTauJetPlusTrackZSPCorJetAntiKt5",0,0);
    algo226->produces("TCTauJetPlusTrackZSPCorJetAntiKt5");
    algo226->reads("gsfElectrons");
    algo226->reads("ak5JetTracksAssociatorAtCaloFace");
    algo226->reads("ak5CaloJets");
    algo226->reads("JPTeidTight");
    algo226->reads("offlinePrimaryVertices");
    algo226->reads("ak5JetTracksAssociatorAtVertex");
    algo226->reads("muons");
    algos.push_back(algo226);
    AlgoBase* algo227 = new ToyAlgo("trackCountingHighPurBJetTags",0,0);
    algo227->produces("trackCountingHighPurBJetTags");
    algo227->reads("impactParameterTagInfos");
    algos.push_back(algo227);
    AlgoBase* algo228 = new ToyAlgo("muonMETValueMapProducer",0,0);
    algo228->produces("muonMETValueMapProducer");
    algo228->reads("cscSegments");
    algo228->reads("horeco");
    algo228->reads("offlineBeamSpot");
    algo228->reads("hbhereco");
    algo228->reads("muons");
    algo228->reads("ecalRecHit");
    algo228->reads("dt4DSegments");
    algo228->reads("towerMaker");
    algos.push_back(algo228);
    AlgoBase* algo229 = new ToyAlgo("hfEMClusters",0,0);
    algo229->produces("hfEMClusters");
    algo229->reads("hfreco");
    algos.push_back(algo229);
    AlgoBase* algo230 = new ToyAlgo("simpleSecondaryVertexHighPurBJetTags",0,0);
    algo230->produces("simpleSecondaryVertexHighPurBJetTags");
    algo230->reads("secondaryVertexTagInfos");
    algos.push_back(algo230);
    AlgoBase* algo231 = new ToyAlgo("particleFlowClusterHO",0,0);
    algo231->produces("particleFlowClusterHO");
    algo231->reads("particleFlowRecHitHO");
    algos.push_back(algo231);
    AlgoBase* algo232 = new ToyAlgo("muidTMOneStationLoose",0,0);
    algo232->produces("muidTMOneStationLoose");
    algo232->reads("muons1stStep");
    algos.push_back(algo232);
    AlgoBase* algo233 = new ToyAlgo("muonsFromCosmics",0,0);
    algo233->produces("muonsFromCosmics");
    algo233->reads("cscSegments");
    algo233->reads("horeco");
    algo233->reads("globalCosmicMuons");
    algo233->reads("dt4DCosmicSegments");
    algo233->reads("glbTrackQual");
    algo233->reads("ak5CaloJets");
    algo233->reads("offlineBeamSpot");
    algo233->reads("regionalCosmicTracks");
    algo233->reads("hbhereco");
    algo233->reads("ecalRecHit");
    algo233->reads("dt4DSegments");
    algo233->reads("towerMaker");
    algos.push_back(algo233);
    AlgoBase* algo234 = new ToyAlgo("towerMaker",0,0);
    algo234->produces("towerMaker");
    algo234->reads("horeco");
    algo234->reads("ecalRecHit");
    algo234->reads("hfreco");
    algo234->reads("hbhereco");
    algos.push_back(algo234);
    AlgoBase* algo235 = new ToyAlgo("particleFlowRecHitECAL",0,0);
    algo235->produces("particleFlowRecHitECAL");
    algo235->reads("ecalRecHit");
    algos.push_back(algo235);
    AlgoBase* algo236 = new ToyAlgo("mixedTripletStepSeedsA",0,0);
    algo236->produces("mixedTripletStepSeedsA");
    algo236->reads("siStripClusters");
    algo236->reads("siPixelClusters");
    algo236->reads("offlineBeamSpot");
    algos.push_back(algo236);
    AlgoBase* algo237 = new ToyAlgo("mixedTripletStep",0,0);
    algo237->produces("mixedTripletStep");
    algo237->reads("mixedTripletStepSelector");
    algo237->reads("mixedTripletStepTracks");
    algos.push_back(algo237);
    AlgoBase* algo238 = new ToyAlgo("tcMet",0,0);
    algo238->produces("tcMet");
    algo238->reads("generalTracks");
    algo238->reads("particleFlowClusterECAL");
    algo238->reads("gsfElectrons");
    algo238->reads("offlineBeamSpot");
    algo238->reads("particleFlowClusterHFHAD");
    algo238->reads("muonMETValueMapProducer");
    algo238->reads("met");
    algo238->reads("muonTCMETValueMapProducer");
    algo238->reads("offlinePrimaryVertices");
    algo238->reads("particleFlowClusterHFEM");
    algo238->reads("muons");
    algo238->reads("particleFlowClusterHCAL");
    algo238->reads("towerMaker");
    algos.push_back(algo238);
    AlgoBase* algo239 = new ToyAlgo("mixedTripletStepSeedsB",0,0);
    algo239->produces("mixedTripletStepSeedsB");
    algo239->reads("siStripClusters");
    algo239->reads("siPixelClusters");
    algo239->reads("offlineBeamSpot");
    algos.push_back(algo239);
    AlgoBase* algo240 = new ToyAlgo("muonTCMETValueMapProducer",0,0);
    algo240->produces("muonTCMETValueMapProducer");
    algo240->reads("muons");
    algo240->reads("offlinePrimaryVertices");
    algo240->reads("offlineBeamSpot");
    algos.push_back(algo240);
    AlgoBase* algo241 = new ToyAlgo("siStripDigis",0,0);
    algo241->produces("siStripDigis");
    algo241->reads("rawDataCollector");
    algos.push_back(algo241);
    AlgoBase* algo242 = new ToyAlgo("trackExtrapolator",0,0);
    algo242->produces("trackExtrapolator");
    algo242->reads("generalTracks");
    algos.push_back(algo242);
    AlgoBase* algo243 = new ToyAlgo("hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr",0,0);
    algo243->produces("hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr");
    algo243->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo243->reads("hpsPFTauProducer");
    algo243->reads("offlinePrimaryVertices");
    algo243->reads("kt6PFJets");
    algo243->reads("particleFlow");
    algos.push_back(algo243);
    AlgoBase* algo244 = new ToyAlgo("conversions",0,0);
    algo244->produces("conversions");
    algo244->reads("correctedHybridSuperClusters");
    algo244->reads("multi5x5SuperClusters");
    algo244->reads("hybridSuperClusters");
    algo244->reads("correctedMulti5x5SuperClustersWithPreshower");
    algo244->reads("towerMaker");
    algos.push_back(algo244);
    AlgoBase* algo245 = new ToyAlgo("particleFlowClusterECAL",0,0);
    algo245->produces("particleFlowClusterECAL");
    algo245->reads("particleFlowRecHitECAL");
    algos.push_back(algo245);
    AlgoBase* algo246 = new ToyAlgo("hpsTancTausDiscriminationByMediumElectronRejection",0,0);
    algo246->produces("hpsTancTausDiscriminationByMediumElectronRejection");
    algo246->reads("hpsTancTaus");
    algos.push_back(algo246);
    AlgoBase* algo247 = new ToyAlgo("muPFIsoDepositGamma",0,0);
    algo247->produces("muPFIsoDepositGamma");
    algo247->reads("muons1stStep");
    algo247->reads("pfAllPhotons");
    algos.push_back(algo247);
    AlgoBase* algo248 = new ToyAlgo("HcalHaloData",0,0);
    algo248->produces("HcalHaloData");
    algo248->reads("horeco");
    algo248->reads("hfreco");
    algo248->reads("hbhereco");
    algos.push_back(algo248);
    AlgoBase* algo249 = new ToyAlgo("photonConvTrajSeedFromSingleLeg",0,0);
    algo249->produces("photonConvTrajSeedFromSingleLeg");
    algo249->reads("pixelVertices");
    algo249->reads("generalTracks");
    algo249->reads("siStripClusters");
    algo249->reads("siPixelClusters");
    algo249->reads("offlineBeamSpot");
    algos.push_back(algo249);
    AlgoBase* algo250 = new ToyAlgo("softMuonTagInfos",0,0);
    algo250->produces("softMuonTagInfos");
    algo250->reads("ak5CaloJets");
    algo250->reads("offlinePrimaryVertices");
    algo250->reads("muons");
    algos.push_back(algo250);
    AlgoBase* algo251 = new ToyAlgo("hpsPFTauDiscriminationByLooseIsolationDBSumPtCorr",0,0);
    algo251->produces("hpsPFTauDiscriminationByLooseIsolationDBSumPtCorr");
    algo251->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo251->reads("hpsPFTauDiscriminationByLooseChargedIsolation");
    algo251->reads("kt6PFJets");
    algo251->reads("hpsPFTauProducer");
    algo251->reads("offlinePrimaryVertices");
    algo251->reads("particleFlow");
    algos.push_back(algo251);
    AlgoBase* algo252 = new ToyAlgo("particleFlowRecHitHO",0,0);
    algo252->produces("particleFlowRecHitHO");
    algo252->reads("horeco");
    algos.push_back(algo252);
    AlgoBase* algo253 = new ToyAlgo("pixelLessStepTracks",0,0);
    algo253->produces("pixelLessStepTracks");
    algo253->reads("pixelLessStepTrackCandidates");
    algo253->reads("offlineBeamSpot");
    algos.push_back(algo253);
    AlgoBase* algo254 = new ToyAlgo("pfAllChargedParticles",0,0);
    algo254->produces("pfAllChargedParticles");
    algo254->reads("pfNoPileUp");
    algos.push_back(algo254);
    AlgoBase* algo255 = new ToyAlgo("particleFlowDisplacedVertex",0,0);
    algo255->produces("particleFlowDisplacedVertex");
    algo255->reads("particleFlowDisplacedVertexCandidate");
    algo255->reads("offlinePrimaryVertices");
    algo255->reads("offlineBeamSpot");
    algos.push_back(algo255);
    AlgoBase* algo256 = new ToyAlgo("impactParameterTagInfos",0,0);
    algo256->produces("impactParameterTagInfos");
    algo256->reads("offlinePrimaryVertices");
    algo256->reads("ak5JetTracksAssociatorAtVertex");
    algos.push_back(algo256);
    AlgoBase* algo257 = new ToyAlgo("hpsPFTauDiscriminationByTightMuonRejection",0,0);
    algo257->produces("hpsPFTauDiscriminationByTightMuonRejection");
    algo257->reads("hpsPFTauProducer");
    algos.push_back(algo257);
    AlgoBase* algo258 = new ToyAlgo("tcMetWithPFclusters",0,0);
    algo258->produces("tcMetWithPFclusters");
    algo258->reads("generalTracks");
    algo258->reads("particleFlowClusterECAL");
    algo258->reads("gsfElectrons");
    algo258->reads("offlineBeamSpot");
    algo258->reads("particleFlowClusterHFHAD");
    algo258->reads("muonMETValueMapProducer");
    algo258->reads("met");
    algo258->reads("muonTCMETValueMapProducer");
    algo258->reads("offlinePrimaryVertices");
    algo258->reads("particleFlowClusterHFEM");
    algo258->reads("muons");
    algo258->reads("particleFlowClusterHCAL");
    algo258->reads("towerMaker");
    algos.push_back(algo258);
    AlgoBase* algo259 = new ToyAlgo("hpsTancTausDiscriminationByTancLoose",0,0);
    algo259->produces("hpsTancTausDiscriminationByTancLoose");
    algo259->reads("hpsTancTaus");
    algo259->reads("hpsTancTausDiscriminationByTanc");
    algos.push_back(algo259);
    AlgoBase* algo260 = new ToyAlgo("muPFIsoValueGammaHighThreshold03",0,0);
    algo260->produces("muPFIsoValueGammaHighThreshold03");
    algo260->reads("muPFIsoDepositGamma");
    algos.push_back(algo260);
    AlgoBase* algo261 = new ToyAlgo("muPFIsoValueGammaHighThreshold04",0,0);
    algo261->produces("muPFIsoValueGammaHighThreshold04");
    algo261->reads("muPFIsoDepositGamma");
    algos.push_back(algo261);
    AlgoBase* algo262 = new ToyAlgo("particleFlowTmp",0,0);
    algo262->produces("particleFlowTmp");
    algo262->reads("particleFlowBlock");
    algo262->reads("muons1stStep");
    algo262->reads("electronsCiCLoose");
    algo262->reads("particleFlowRecHitHCAL");
    algo262->reads("offlinePrimaryVertices");
    algos.push_back(algo262);
    AlgoBase* algo263 = new ToyAlgo("tobTecStepSeeds",0,0);
    algo263->produces("tobTecStepSeeds");
    algo263->reads("siStripClusters");
    algo263->reads("siPixelClusters");
    algo263->reads("offlineBeamSpot");
    algos.push_back(algo263);
    AlgoBase* algo264 = new ToyAlgo("muPFIsoValueNeutralHighThreshold04",0,0);
    algo264->produces("muPFIsoValueNeutralHighThreshold04");
    algo264->reads("muPFIsoDepositNeutral");
    algos.push_back(algo264);
    AlgoBase* algo265 = new ToyAlgo("muPFIsoValueNeutralHighThreshold03",0,0);
    algo265->produces("muPFIsoValueNeutralHighThreshold03");
    algo265->reads("muPFIsoDepositNeutral");
    algos.push_back(algo265);
    AlgoBase* algo266 = new ToyAlgo("uncleanedOnlyOutInConversionTrackProducer",0,0);
    algo266->produces("uncleanedOnlyOutInConversionTrackProducer");
    algo266->reads("offlineBeamSpot");
    algos.push_back(algo266);
    AlgoBase* algo267 = new ToyAlgo("muonsFromCosmics1Leg",0,0);
    algo267->produces("muonsFromCosmics1Leg");
    algo267->reads("cscSegments");
    algo267->reads("horeco");
    algo267->reads("dt4DCosmicSegments");
    algo267->reads("glbTrackQual");
    algo267->reads("ak5CaloJets");
    algo267->reads("offlineBeamSpot");
    algo267->reads("regionalCosmicTracks");
    algo267->reads("hbhereco");
    algo267->reads("globalCosmicMuons1Leg");
    algo267->reads("ecalRecHit");
    algo267->reads("dt4DSegments");
    algo267->reads("towerMaker");
    algos.push_back(algo267);
    AlgoBase* algo268 = new ToyAlgo("shrinkingConePFTauDiscriminationAgainstElectron",0,0);
    algo268->produces("shrinkingConePFTauDiscriminationAgainstElectron");
    algo268->reads("shrinkingConePFTauProducer");
    algo268->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algos.push_back(algo268);
    AlgoBase* algo269 = new ToyAlgo("hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr",0,0);
    algo269->produces("hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr");
    algo269->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo269->reads("hpsPFTauProducer");
    algo269->reads("offlinePrimaryVertices");
    algo269->reads("kt6PFJets");
    algo269->reads("particleFlow");
    algos.push_back(algo269);
    AlgoBase* algo270 = new ToyAlgo("detachedTripletStepTracks",0,0);
    algo270->produces("detachedTripletStepTracks");
    algo270->reads("detachedTripletStepTrackCandidates");
    algo270->reads("offlineBeamSpot");
    algos.push_back(algo270);
    AlgoBase* algo271 = new ToyAlgo("hpsPFTauDiscriminationByVLooseIsolationDBSumPtCorr",0,0);
    algo271->produces("hpsPFTauDiscriminationByVLooseIsolationDBSumPtCorr");
    algo271->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo271->reads("hpsPFTauProducer");
    algo271->reads("kt6PFJets");
    algo271->reads("hpsPFTauDiscriminationByVLooseChargedIsolation");
    algo271->reads("offlinePrimaryVertices");
    algo271->reads("particleFlow");
    algos.push_back(algo271);
    AlgoBase* algo272 = new ToyAlgo("generalV0Candidates",0,0);
    algo272->produces("generalV0Candidates");
    algo272->reads("generalTracks");
    algos.push_back(algo272);
    AlgoBase* algo273 = new ToyAlgo("muidGMStaChiCompatibility",0,0);
    algo273->produces("muidGMStaChiCompatibility");
    algo273->reads("muons1stStep");
    algos.push_back(algo273);
    AlgoBase* algo274 = new ToyAlgo("phPFIsoValueNeutral04",0,0);
    algo274->produces("phPFIsoValueNeutral04");
    algo274->reads("phPFIsoDepositNeutral");
    algos.push_back(algo274);
    AlgoBase* algo275 = new ToyAlgo("hbhereco",0,0);
    algo275->produces("hbhereco");
    algo275->reads("hbheprereco");
    algo275->reads("trackExtrapolator");
    algo275->reads("ecalRecHit");
    algos.push_back(algo275);
    AlgoBase* algo276 = new ToyAlgo("elPFIsoDepositGamma",0,0);
    algo276->produces("elPFIsoDepositGamma");
    algo276->reads("pfSelectedElectrons");
    algo276->reads("pfAllPhotons");
    algos.push_back(algo276);
    AlgoBase* algo277 = new ToyAlgo("kt4CaloJets",0,0);
    algo277->produces("kt4CaloJets");
    algo277->reads("offlinePrimaryVertices");
    algo277->reads("towerMaker");
    algos.push_back(algo277);
    AlgoBase* algo278 = new ToyAlgo("muons",0,0);
    algo278->produces("muons");
    algo278->reads("muIsoDepositJets");
    algo278->reads("muIsoDepositTk");
    algo278->reads("muPFIsoValueChargedAll04");
    algo278->reads("muPFIsoValueChargedAll03");
    algo278->reads("cosmicsVeto");
    algo278->reads("muonShowerInformation");
    algo278->reads("muidTMLastStationOptimizedLowPtLoose");
    algo278->reads("muPFIsoValueNeutral04");
    algo278->reads("muPFIsoValueNeutral03");
    algo278->reads("muIsoDepositCalByAssociatorTowers");
    algo278->reads("muPFIsoValueGamma04");
    algo278->reads("muPFIsoValueGamma03");
    algo278->reads("muPFIsoValueGammaHighThreshold03");
    algo278->reads("muPFIsoValuePU04");
    algo278->reads("muPFIsoValuePU03");
    algo278->reads("muPFIsoValueGammaHighThreshold04");
    algo278->reads("muPFIsoValueCharged04");
    algo278->reads("muPFIsoValueCharged03");
    algo278->reads("particleFlowTmp");
    algo278->reads("muPFIsoValueNeutralHighThreshold04");
    algo278->reads("muPFIsoValueNeutralHighThreshold03");
    algo278->reads("muons1stStep");
    algos.push_back(algo278);
    AlgoBase* algo279 = new ToyAlgo("muonRPCDigis",0,0);
    algo279->produces("muonRPCDigis");
    algo279->reads("rawDataCollector");
    algos.push_back(algo279);
    AlgoBase* algo280 = new ToyAlgo("lowPtTripletStepSelector",0,0);
    algo280->produces("lowPtTripletStepSelector");
    algo280->reads("pixelVertices");
    algo280->reads("lowPtTripletStepTracks");
    algo280->reads("offlineBeamSpot");
    algos.push_back(algo280);
    AlgoBase* algo281 = new ToyAlgo("CastorTowerReco",0,0);
    algo281->produces("CastorTowerReco");
    algos.push_back(algo281);
    AlgoBase* algo282 = new ToyAlgo("kt6CaloJets",0,0);
    algo282->produces("kt6CaloJets");
    algo282->reads("offlinePrimaryVertices");
    algo282->reads("towerMaker");
    algos.push_back(algo282);
    AlgoBase* algo283 = new ToyAlgo("siStripClusters",0,0);
    algo283->produces("siStripClusters");
    algo283->reads("siStripDigis");
    algos.push_back(algo283);
    AlgoBase* algo284 = new ToyAlgo("pfMet",0,0);
    algo284->produces("pfMet");
    algo284->reads("ak5PFJets");
    algo284->reads("particleFlow");
    algos.push_back(algo284);
    AlgoBase* algo285 = new ToyAlgo("muidTrackerMuonArbitrated",0,0);
    algo285->produces("muidTrackerMuonArbitrated");
    algo285->reads("muons1stStep");
    algos.push_back(algo285);
    AlgoBase* algo286 = new ToyAlgo("cosmicsVetoTrackCandidates",0,0);
    algo286->produces("cosmicsVetoTrackCandidates");
    algo286->reads("cosmicsVetoSeeds");
    algos.push_back(algo286);
    AlgoBase* algo287 = new ToyAlgo("trackCountingHighEffBJetTags",0,0);
    algo287->produces("trackCountingHighEffBJetTags");
    algo287->reads("impactParameterTagInfos");
    algos.push_back(algo287);
    AlgoBase* algo288 = new ToyAlgo("iterativeCone5CaloJets",0,0);
    algo288->produces("iterativeCone5CaloJets");
    algo288->reads("offlinePrimaryVertices");
    algo288->reads("towerMaker");
    algos.push_back(algo288);
    AlgoBase* algo289 = new ToyAlgo("uncleanedOnlyElectronSeeds",0,0);
    algo289->produces("uncleanedOnlyElectronSeeds");
    algo289->reads("newCombinedSeeds");
    algo289->reads("offlineBeamSpot");
    algo289->reads("hbhereco");
    algo289->reads("offlinePrimaryVerticesWithBS");
    algo289->reads("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower");
    algo289->reads("uncleanedOnlyCorrectedHybridSuperClusters");
    algo289->reads("towerMaker");
    algos.push_back(algo289);
    AlgoBase* algo290 = new ToyAlgo("ecalGlobalUncalibRecHit",0,0);
    algo290->produces("ecalGlobalUncalibRecHit");
    algo290->reads("ecalDigis");
    algos.push_back(algo290);
    AlgoBase* algo291 = new ToyAlgo("ak7CaloJets",0,0);
    algo291->produces("ak7CaloJets");
    algo291->reads("offlinePrimaryVertices");
    algo291->reads("towerMaker");
    algos.push_back(algo291);
    AlgoBase* algo292 = new ToyAlgo("kt4JetExtender",0,0);
    algo292->produces("kt4JetExtender");
    algo292->reads("kt4JetTracksAssociatorAtVertex");
    algo292->reads("kt4CaloJets");
    algo292->reads("kt4JetTracksAssociatorAtCaloFace");
    algos.push_back(algo292);
    AlgoBase* algo293 = new ToyAlgo("cosmicsVetoTracks",0,0);
    algo293->produces("cosmicsVetoTracks");
    algo293->reads("cosmicsVetoTracksRaw");
    algo293->reads("offlineBeamSpot");
    algos.push_back(algo293);
    AlgoBase* algo294 = new ToyAlgo("uncleanedOnlyPfTrack",0,0);
    algo294->produces("uncleanedOnlyPfTrack");
    algo294->reads("generalTracks");
    algo294->reads("muons1stStep");
    algo294->reads("uncleanedOnlyElectronGsfTracks");
    algo294->reads("offlinePrimaryVertices");
    algos.push_back(algo294);
    AlgoBase* algo295 = new ToyAlgo("softElectronByIP3dBJetTags",0,0);
    algo295->produces("softElectronByIP3dBJetTags");
    algo295->reads("softElectronTagInfos");
    algos.push_back(algo295);
    AlgoBase* algo296 = new ToyAlgo("hpsPFTauDiscriminationByMediumChargedIsolation",0,0);
    algo296->produces("hpsPFTauDiscriminationByMediumChargedIsolation");
    algo296->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo296->reads("hpsPFTauDiscriminationByLooseChargedIsolation");
    algo296->reads("kt6PFJets");
    algo296->reads("hpsPFTauProducer");
    algo296->reads("offlinePrimaryVertices");
    algo296->reads("particleFlow");
    algos.push_back(algo296);
    AlgoBase* algo297 = new ToyAlgo("muPFIsoDepositPU",0,0);
    algo297->produces("muPFIsoDepositPU");
    algo297->reads("muons1stStep");
    algo297->reads("pfPileUpAllChargedParticles");
    algos.push_back(algo297);
    AlgoBase* algo298 = new ToyAlgo("regionalCosmicTrackerSeeds",0,0);
    algo298->produces("regionalCosmicTrackerSeeds");
    algo298->reads("ak5CaloJets");
    algo298->reads("siStripClusters");
    algo298->reads("cosmicMuons");
    algo298->reads("siPixelClusters");
    algos.push_back(algo298);
    AlgoBase* algo299 = new ToyAlgo("reducedEcalRecHitsEB",0,0);
    algo299->produces("reducedEcalRecHitsEB");
    algo299->reads("interestingEcalDetIdEB");
    algo299->reads("ecalRecHit");
    algos.push_back(algo299);
    AlgoBase* algo300 = new ToyAlgo("shrinkingConePFTauDiscriminationByECALIsolation",0,0);
    algo300->produces("shrinkingConePFTauDiscriminationByECALIsolation");
    algo300->reads("shrinkingConePFTauProducer");
    algo300->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo300->reads("offlinePrimaryVertices");
    algos.push_back(algo300);
    AlgoBase* algo301 = new ToyAlgo("pfPileUp",0,0);
    algo301->produces("pfPileUp");
    algo301->reads("offlinePrimaryVertices");
    algo301->reads("particleFlowTmp");
    algos.push_back(algo301);
    AlgoBase* algo302 = new ToyAlgo("particleFlowClusterPS",0,0);
    algo302->produces("particleFlowClusterPS");
    algo302->reads("particleFlowRecHitPS");
    algos.push_back(algo302);
    AlgoBase* algo303 = new ToyAlgo("muidTMLastStationAngLoose",0,0);
    algo303->produces("muidTMLastStationAngLoose");
    algo303->reads("muons1stStep");
    algos.push_back(algo303);
    AlgoBase* algo304 = new ToyAlgo("elPFIsoValueCharged04",0,0);
    algo304->produces("elPFIsoValueCharged04");
    algo304->reads("elPFIsoDepositCharged");
    algos.push_back(algo304);
    AlgoBase* algo305 = new ToyAlgo("ecalDrivenGsfElectronCores",0,0);
    algo305->produces("ecalDrivenGsfElectronCores");
    algo305->reads("generalTracks");
    algo305->reads("electronGsfTracks");
    algo305->reads("pfTrackElec");
    algos.push_back(algo305);
    AlgoBase* algo306 = new ToyAlgo("shrinkingConePFTauProducerSansRefs",0,0);
    algo306->produces("shrinkingConePFTauProducerSansRefs");
    algo306->reads("recoTauAK5PFJets08Region");
    algo306->reads("ak5PFJets");
    algo306->reads("pfRecoTauTagInfoProducer");
    algo306->reads("offlinePrimaryVertices");
    algo306->reads("ak5PFJetsRecoTauPiZeros");
    algo306->reads("particleFlow");
    algos.push_back(algo306);
    AlgoBase* algo307 = new ToyAlgo("uncleanedOnlyGeneralConversionTrackProducer",0,0);
    algo307->produces("uncleanedOnlyGeneralConversionTrackProducer");
    algo307->reads("offlineBeamSpot");
    algos.push_back(algo307);
    AlgoBase* algo308 = new ToyAlgo("hpsTancTausDiscriminationByLeadingTrackPtCut",0,0);
    algo308->produces("hpsTancTausDiscriminationByLeadingTrackPtCut");
    algo308->reads("hpsTancTaus");
    algos.push_back(algo308);
    AlgoBase* algo309 = new ToyAlgo("ecalPreshowerRecHit",0,0);
    algo309->produces("ecalPreshowerRecHit");
    algo309->reads("ecalPreshowerDigis");
    algos.push_back(algo309);
    AlgoBase* algo310 = new ToyAlgo("pfPhotonTranslator",0,0);
    algo310->produces("pfPhotonTranslator");
    algo310->reads("phPFIsoValueGamma04");
    algo310->reads("phPFIsoValueCharged04");
    algo310->reads("phPFIsoValueNeutral04");
    algo310->reads("pfSelectedPhotons");
    algo310->reads("ecalRecHit");
    algo310->reads("towerMaker");
    algos.push_back(algo310);
    AlgoBase* algo311 = new ToyAlgo("cosmicsVeto",0,0);
    algo311->produces("cosmicsVeto");
    algo311->reads("generalTracks");
    algo311->reads("muons1stStep");
    algo311->reads("globalMuons");
    algo311->reads("muonsFromCosmics1Leg");
    algo311->reads("offlinePrimaryVertices");
    algos.push_back(algo311);
    AlgoBase* algo312 = new ToyAlgo("hpsTancTausDiscriminationByLooseElectronRejection",0,0);
    algo312->produces("hpsTancTausDiscriminationByLooseElectronRejection");
    algo312->reads("hpsTancTaus");
    algos.push_back(algo312);
    AlgoBase* algo313 = new ToyAlgo("particleFlowRecHitHCAL",0,0);
    algo313->produces("particleFlowRecHitHCAL");
    algo313->reads("hfreco");
    algo313->reads("hbhereco");
    algo313->reads("towerMakerPF");
    algos.push_back(algo313);
    AlgoBase* algo314 = new ToyAlgo("pfElectronTranslator",0,0);
    algo314->produces("pfElectronTranslator");
    algo314->reads("pfSelectedElectrons");
    algo314->reads("electronGsfTracks");
    algo314->reads("elPFIsoValueCharged04");
    algo314->reads("elPFIsoValueNeutral04");
    algo314->reads("elPFIsoValueGamma04");
    algo314->reads("particleFlowTmp");
    algos.push_back(algo314);
    AlgoBase* algo315 = new ToyAlgo("muidTMLastStationOptimizedLowPtLoose",0,0);
    algo315->produces("muidTMLastStationOptimizedLowPtLoose");
    algo315->reads("muons1stStep");
    algos.push_back(algo315);
    AlgoBase* algo316 = new ToyAlgo("uncleanedOnlyCkfOutInTracksFromConversions",0,0);
    algo316->produces("uncleanedOnlyCkfOutInTracksFromConversions");
    algo316->reads("uncleanedOnlyConversionTrackCandidates");
    algo316->reads("offlineBeamSpot");
    algos.push_back(algo316);
    AlgoBase* algo317 = new ToyAlgo("hpsPFTauDiscriminationByMediumIsolation",0,0);
    algo317->produces("hpsPFTauDiscriminationByMediumIsolation");
    algo317->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo317->reads("hpsPFTauDiscriminationByMediumChargedIsolation");
    algo317->reads("kt6PFJets");
    algo317->reads("hpsPFTauProducer");
    algo317->reads("offlinePrimaryVertices");
    algo317->reads("particleFlow");
    algos.push_back(algo317);
    AlgoBase* algo318 = new ToyAlgo("combinatoricRecoTausHPSSelector",0,0);
    algo318->produces("combinatoricRecoTausHPSSelector");
    algo318->reads("combinatoricRecoTaus");
    algos.push_back(algo318);
    AlgoBase* algo319 = new ToyAlgo("muidTMOneStationAngLoose",0,0);
    algo319->produces("muidTMOneStationAngLoose");
    algo319->reads("muons1stStep");
    algos.push_back(algo319);
    AlgoBase* algo320 = new ToyAlgo("initialStepTracks",0,0);
    algo320->produces("initialStepTracks");
    algo320->reads("initialStepTrackCandidates");
    algo320->reads("offlineBeamSpot");
    algos.push_back(algo320);
    AlgoBase* algo321 = new ToyAlgo("outInConversionTrackProducer",0,0);
    algo321->produces("outInConversionTrackProducer");
    algo321->reads("offlineBeamSpot");
    algos.push_back(algo321);
    AlgoBase* algo322 = new ToyAlgo("hpsTancTausSansRefs",0,0);
    algo322->produces("hpsTancTausSansRefs");
    algo322->reads("combinatoricRecoTausDiscriminationByLeadingPionPtCut");
    algo322->reads("combinatoricRecoTaus");
    algo322->reads("combinatoricRecoTausHPSSelector");
    algos.push_back(algo322);
    AlgoBase* algo323 = new ToyAlgo("elPFIsoDepositCharged",0,0);
    algo323->produces("elPFIsoDepositCharged");
    algo323->reads("pfSelectedElectrons");
    algo323->reads("pfAllChargedHadrons");
    algos.push_back(algo323);
    AlgoBase* algo324 = new ToyAlgo("softMuonBJetTags",0,0);
    algo324->produces("softMuonBJetTags");
    algo324->reads("softMuonTagInfos");
    algos.push_back(algo324);
    AlgoBase* algo325 = new ToyAlgo("uncleanedOnlyGsfConversionTrackProducer",0,0);
    algo325->produces("uncleanedOnlyGsfConversionTrackProducer");
    algo325->reads("offlineBeamSpot");
    algos.push_back(algo325);
    AlgoBase* algo326 = new ToyAlgo("shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion",0,0);
    algo326->produces("shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion");
    algo326->reads("shrinkingConePFTauProducer");
    algo326->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo326->reads("offlinePrimaryVertices");
    algos.push_back(algo326);
    AlgoBase* algo327 = new ToyAlgo("caloRecoTauTagInfoProducer",0,0);
    algo327->produces("caloRecoTauTagInfoProducer");
    algo327->reads("multi5x5SuperClusters");
    algo327->reads("hybridSuperClusters");
    algo327->reads("offlinePrimaryVertices");
    algo327->reads("JPTAntiKt5JetTracksAssociatorAtVertex");
    algos.push_back(algo327);
    AlgoBase* algo328 = new ToyAlgo("simpleSecondaryVertexHighEffBJetTags",0,0);
    algo328->produces("simpleSecondaryVertexHighEffBJetTags");
    algo328->reads("secondaryVertexTagInfos");
    algos.push_back(algo328);
    AlgoBase* algo329 = new ToyAlgo("ak7JetExtender",0,0);
    algo329->produces("ak7JetExtender");
    algo329->reads("ak7JetTracksAssociatorAtCaloFace");
    algo329->reads("ak7JetTracksAssociatorAtVertex");
    algo329->reads("ak7CaloJets");
    algos.push_back(algo329);
    AlgoBase* algo330 = new ToyAlgo("dt4DCosmicSegments",0,0);
    algo330->produces("dt4DCosmicSegments");
    algo330->reads("dt1DCosmicRecHits");
    algos.push_back(algo330);
    AlgoBase* algo331 = new ToyAlgo("offlinePrimaryVerticesWithBS",0,0);
    algo331->produces("offlinePrimaryVerticesWithBS");
    algo331->reads("offlinePrimaryVertices");
    algos.push_back(algo331);
    AlgoBase* algo332 = new ToyAlgo("csc2DRecHits",0,0);
    algo332->produces("csc2DRecHits");
    algo332->reads("muonCSCDigis");
    algos.push_back(algo332);
    AlgoBase* algo333 = new ToyAlgo("muPFIsoDepositChargedAll",0,0);
    algo333->produces("muPFIsoDepositChargedAll");
    algo333->reads("muons1stStep");
    algo333->reads("pfAllChargedParticles");
    algos.push_back(algo333);
    AlgoBase* algo334 = new ToyAlgo("uncleanedHybridSuperClusters",0,0);
    algo334->produces("uncleanedHybridSuperClusters");
    algos.push_back(algo334);
    AlgoBase* algo335 = new ToyAlgo("multi5x5BasicClustersCleaned",0,0);
    algo335->produces("multi5x5BasicClustersCleaned");
    algos.push_back(algo335);
    AlgoBase* algo336 = new ToyAlgo("JPTCaloRecoTauProducer",0,0);
    algo336->produces("JPTCaloRecoTauProducer");
    algo336->reads("caloRecoTauTagInfoProducer");
    algo336->reads("ecalPreshowerRecHit");
    algo336->reads("ecalRecHit");
    algo336->reads("offlinePrimaryVertices");
    algos.push_back(algo336);
    AlgoBase* algo337 = new ToyAlgo("hpsTancTausDiscriminationByTightElectronRejection",0,0);
    algo337->produces("hpsTancTausDiscriminationByTightElectronRejection");
    algo337->reads("hpsTancTaus");
    algos.push_back(algo337);
    AlgoBase* algo338 = new ToyAlgo("muidGMTkChiCompatibility",0,0);
    algo338->produces("muidGMTkChiCompatibility");
    algo338->reads("muons1stStep");
    algos.push_back(algo338);
    AlgoBase* algo339 = new ToyAlgo("pixelLessStepTrackCandidates",0,0);
    algo339->produces("pixelLessStepTrackCandidates");
    algo339->reads("pixelLessStepSeeds");
    algos.push_back(algo339);
    AlgoBase* algo340 = new ToyAlgo("particleFlowClusterHFEM",0,0);
    algo340->produces("particleFlowClusterHFEM");
    algo340->reads("particleFlowRecHitHCAL");
    algos.push_back(algo340);
    AlgoBase* algo341 = new ToyAlgo("CSCHaloData",0,0);
    algo341->produces("CSCHaloData");
    algo341->reads("cscSegments");
    algo341->reads("gtDigis");
    algo341->reads("muonCSCDigis");
    algo341->reads("standAloneMuons");
    algo341->reads("csc2DRecHits");
    algo341->reads("muons");
    algo341->reads("TriggerResults");
    algo341->reads("muonsFromCosmics");
    algo341->reads("dt4DSegments");
    algos.push_back(algo341);
    AlgoBase* algo342 = new ToyAlgo("pixelVertices",0,0);
    algo342->produces("pixelVertices");
    algo342->reads("offlineBeamSpot");
    algo342->reads("pixelTracks");
    algos.push_back(algo342);
    AlgoBase* algo343 = new ToyAlgo("htMetIC5",0,0);
    algo343->produces("htMetIC5");
    algo343->reads("iterativeCone5CaloJets");
    algos.push_back(algo343);
    AlgoBase* algo344 = new ToyAlgo("selectDigi",0,0);
    algo344->produces("selectDigi");
    algo344->reads("ecalDigis");
    algo344->reads("uncleanedHybridSuperClusters");
    algo344->reads("ecalRecHit");
    algo344->reads("correctedMulti5x5SuperClustersWithPreshower");
    algos.push_back(algo344);
    AlgoBase* algo345 = new ToyAlgo("glbTrackQual",0,0);
    algo345->produces("glbTrackQual");
    algo345->reads("globalMuons");
    algo345->reads("csc2DRecHits");
    algo345->reads("dt1DRecHits");
    algo345->reads("rpcRecHits");
    algos.push_back(algo345);
    AlgoBase* algo346 = new ToyAlgo("photons",0,0);
    algo346->produces("photons");
    algo346->reads("photonCore");
    algo346->reads("offlineBeamSpot");
    algo346->reads("ecalRecHit");
    algo346->reads("generalTracks");
    algo346->reads("towerMaker");
    algos.push_back(algo346);
    AlgoBase* algo347 = new ToyAlgo("muidTMLastStationTight",0,0);
    algo347->produces("muidTMLastStationTight");
    algo347->reads("muons1stStep");
    algos.push_back(algo347);
    AlgoBase* algo348 = new ToyAlgo("hpsTancTausDiscriminationByVLooseIsolation",0,0);
    algo348->produces("hpsTancTausDiscriminationByVLooseIsolation");
    algo348->reads("hpsTancTaus");
    algo348->reads("offlinePrimaryVertices");
    algo348->reads("kt6PFJets");
    algo348->reads("particleFlow");
    algo348->reads("hpsTancTausDiscriminationByDecayModeSelection");
    algos.push_back(algo348);
    AlgoBase* algo349 = new ToyAlgo("uncleanedOnlyPfTrackElec",0,0);
    algo349->produces("uncleanedOnlyPfTrackElec");
    algos.push_back(algo349);
    AlgoBase* algo350 = new ToyAlgo("phPFIsoDepositCharged",0,0);
    algo350->produces("phPFIsoDepositCharged");
    algo350->reads("pfSelectedPhotons");
    algo350->reads("pfAllChargedHadrons");
    algos.push_back(algo350);
    AlgoBase* algo351 = new ToyAlgo("htMetKT4",0,0);
    algo351->produces("htMetKT4");
    algo351->reads("kt4CaloJets");
    algos.push_back(algo351);
    AlgoBase* algo352 = new ToyAlgo("muPFIsoValueNeutral04",0,0);
    algo352->produces("muPFIsoValueNeutral04");
    algo352->reads("muPFIsoDepositNeutral");
    algos.push_back(algo352);
    AlgoBase* algo353 = new ToyAlgo("htMetKT6",0,0);
    algo353->produces("htMetKT6");
    algo353->reads("kt6CaloJets");
    algos.push_back(algo353);
    AlgoBase* algo354 = new ToyAlgo("muPFIsoValueNeutral03",0,0);
    algo354->produces("muPFIsoValueNeutral03");
    algo354->reads("muPFIsoDepositNeutral");
    algos.push_back(algo354);
    AlgoBase* algo355 = new ToyAlgo("shrinkingConePFTauDiscriminationByTaNC",0,0);
    algo355->produces("shrinkingConePFTauDiscriminationByTaNC");
    algo355->reads("shrinkingConePFTauProducer");
    algo355->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algos.push_back(algo355);
    AlgoBase* algo356 = new ToyAlgo("generalConversionTrackProducer",0,0);
    algo356->produces("generalConversionTrackProducer");
    algo356->reads("offlineBeamSpot");
    algos.push_back(algo356);
    AlgoBase* algo357 = new ToyAlgo("muonCSCDigis",0,0);
    algo357->produces("muonCSCDigis");
    algo357->reads("rawDataCollector");
    algos.push_back(algo357);
    AlgoBase* algo358 = new ToyAlgo("hpsPFTauDiscriminationByLooseMuonRejection",0,0);
    algo358->produces("hpsPFTauDiscriminationByLooseMuonRejection");
    algo358->reads("hpsPFTauProducer");
    algos.push_back(algo358);
    AlgoBase* algo359 = new ToyAlgo("ak5PFJetsRecoTauPiZeros",0,0);
    algo359->produces("ak5PFJetsRecoTauPiZeros");
    algo359->reads("ak5PFJets");
    algo359->reads("recoTauAK5PFJets08Region");
    algo359->reads("offlinePrimaryVertices");
    algos.push_back(algo359);
    AlgoBase* algo360 = new ToyAlgo("convTrackCandidates",0,0);
    algo360->produces("convTrackCandidates");
    algo360->reads("photonConvTrajSeedFromSingleLeg");
    algos.push_back(algo360);
    AlgoBase* algo361 = new ToyAlgo("muPFIsoValueCharged04",0,0);
    algo361->produces("muPFIsoValueCharged04");
    algo361->reads("muPFIsoDepositCharged");
    algos.push_back(algo361);
    AlgoBase* algo362 = new ToyAlgo("muPFIsoValueCharged03",0,0);
    algo362->produces("muPFIsoValueCharged03");
    algo362->reads("muPFIsoDepositCharged");
    algos.push_back(algo362);
    AlgoBase* algo363 = new ToyAlgo("hpsPFTauDiscriminationByTightIsolation",0,0);
    algo363->produces("hpsPFTauDiscriminationByTightIsolation");
    algo363->reads("hpsPFTauDiscriminationByTightChargedIsolation");
    algo363->reads("hpsPFTauDiscriminationByDecayModeFinding");
    algo363->reads("kt6PFJets");
    algo363->reads("hpsPFTauProducer");
    algo363->reads("offlinePrimaryVertices");
    algo363->reads("particleFlow");
    algos.push_back(algo363);
    AlgoBase* algo364 = new ToyAlgo("trackerDrivenElectronSeeds",0,0);
    algo364->produces("trackerDrivenElectronSeeds");
    algo364->reads("generalTracks");
    algo364->reads("particleFlowClusterHCAL");
    algo364->reads("particleFlowClusterECAL");
    algo364->reads("particleFlowClusterPS");
    algos.push_back(algo364);
    AlgoBase* algo365 = new ToyAlgo("hpsTancTausDiscriminationByTancRaw",0,0);
    algo365->produces("hpsTancTausDiscriminationByTancRaw");
    algo365->reads("hpsTancTaus");
    algo365->reads("hpsTancTausDiscriminationByDecayModeSelection");
    algo365->reads("hpsTancTausDiscriminationByLeadingPionPtCut");
    algos.push_back(algo365);
    AlgoBase* algo366 = new ToyAlgo("kt6PFJets",0,0);
    algo366->produces("kt6PFJets");
    algo366->reads("particleFlow");
    algos.push_back(algo366);
    AlgoBase* algo367 = new ToyAlgo("detachedTripletStep",0,0);
    algo367->produces("detachedTripletStep");
    algo367->reads("detachedTripletStepSelector");
    algo367->reads("detachedTripletStepTracks");
    algos.push_back(algo367);
    AlgoBase* algo368 = new ToyAlgo("muidTMOneStationAngTight",0,0);
    algo368->produces("muidTMOneStationAngTight");
    algo368->reads("muons1stStep");
    algos.push_back(algo368);
    AlgoBase* algo369 = new ToyAlgo("pfConversions",0,0);
    algo369->produces("pfConversions");
    algo369->reads("allConversions");
    algo369->reads("offlinePrimaryVertices");
    algos.push_back(algo369);
    AlgoBase* algo370 = new ToyAlgo("pfElectronInterestingEcalDetIdEE",0,0);
    algo370->produces("pfElectronInterestingEcalDetIdEE");
    algo370->reads("ecalRecHit");
    algo370->reads("pfElectronTranslator");
    algos.push_back(algo370);
    AlgoBase* algo371 = new ToyAlgo("correctedMulti5x5SuperClustersWithPreshower",0,0);
    algo371->produces("correctedMulti5x5SuperClustersWithPreshower");
    algo371->reads("ecalRecHit");
    algo371->reads("multi5x5SuperClustersWithPreshower");
    algos.push_back(algo371);
    AlgoBase* algo372 = new ToyAlgo("eidRobustLoose",0,0);
    algo372->produces("eidRobustLoose");
    algo372->reads("offlinePrimaryVerticesWithBS");
    algo372->reads("ecalRecHit");
    algo372->reads("gsfElectrons");
    algos.push_back(algo372);
    AlgoBase* algo373 = new ToyAlgo("hpsSelectionDiscriminator",0,0);
    algo373->produces("hpsSelectionDiscriminator");
    algo373->reads("combinatoricRecoTaus");
    algos.push_back(algo373);
    AlgoBase* algo374 = new ToyAlgo("detachedTripletStepSeeds",0,0);
    algo374->produces("detachedTripletStepSeeds");
    algo374->reads("siStripClusters");
    algo374->reads("siPixelClusters");
    algo374->reads("offlineBeamSpot");
    algos.push_back(algo374);
    AlgoBase* algo375 = new ToyAlgo("inOutOutInConversionTrackMerger",0,0);
    algo375->produces("inOutOutInConversionTrackMerger");
    algos.push_back(algo375);
    AlgoBase* algo376 = new ToyAlgo("phPFIsoDepositGamma",0,0);
    algo376->produces("phPFIsoDepositGamma");
    algo376->reads("pfSelectedPhotons");
    algo376->reads("pfAllPhotons");
    algos.push_back(algo376);
    AlgoBase* algo377 = new ToyAlgo("ak5PFJetsLegacyHPSPiZeros",0,0);
    algo377->produces("ak5PFJetsLegacyHPSPiZeros");
    algo377->reads("ak5PFJets");
    algo377->reads("recoTauAK5PFJets08Region");
    algo377->reads("offlinePrimaryVertices");
    algos.push_back(algo377);
    AlgoBase* algo378 = new ToyAlgo("cosmicsVetoSeeds",0,0);
    algo378->produces("cosmicsVetoSeeds");
    algo378->reads("generalTracks");
    algo378->reads("muons1stStep");
    algos.push_back(algo378);
    AlgoBase* algo379 = new ToyAlgo("multi5x5SuperClusters",0,0);
    algo379->produces("multi5x5SuperClusters");
    algo379->reads("multi5x5BasicClustersCleaned");
    algo379->reads("multi5x5SuperClustersCleaned");
    algo379->reads("multi5x5SuperClustersUncleaned");
    algo379->reads("multi5x5BasicClustersUncleaned");
    algos.push_back(algo379);
    AlgoBase* algo380 = new ToyAlgo("pfNoPileUp",0,0);
    algo380->produces("pfNoPileUp");
    algo380->reads("pfPileUp");
    algo380->reads("particleFlowTmp");
    algos.push_back(algo380);
    AlgoBase* algo381 = new ToyAlgo("globalCosmicMuons1Leg",0,0);
    algo381->produces("globalCosmicMuons1Leg");
    algo381->reads("regionalCosmicTracks");
    algo381->reads("cosmicMuons1Leg");
    algo381->reads("offlineBeamSpot");
    algos.push_back(algo381);
    AlgoBase* algo382 = new ToyAlgo("mixedTripletStepSelector",0,0);
    algo382->produces("mixedTripletStepSelector");
    algo382->reads("pixelVertices");
    algo382->reads("mixedTripletStepTracks");
    algo382->reads("offlineBeamSpot");
    algos.push_back(algo382);
    AlgoBase* algo383 = new ToyAlgo("siStripZeroSuppression",0,0);
    algo383->produces("siStripZeroSuppression");
    algo383->reads("siStripDigis");
    algos.push_back(algo383);
    AlgoBase* algo384 = new ToyAlgo("pfRecoTauTagInfoProducer",0,0);
    algo384->produces("pfRecoTauTagInfoProducer");
    algo384->reads("offlinePrimaryVertices");
    algo384->reads("particleFlow");
    algo384->reads("ak5PFJetTracksAssociatorAtVertex");
    algos.push_back(algo384);
    AlgoBase* algo385 = new ToyAlgo("PhotonIDProd",0,0);
    algo385->produces("PhotonIDProd");
    algos.push_back(algo385);
    AlgoBase* algo386 = new ToyAlgo("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower",0,0);
    algo386->produces("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower");
    algo386->reads("ecalRecHit");
    algo386->reads("uncleanedOnlyMulti5x5SuperClustersWithPreshower");
    algos.push_back(algo386);
    AlgoBase* algo387 = new ToyAlgo("electronsWithPresel",0,0);
    algo387->produces("electronsWithPresel");
    algo387->reads("ecalDrivenGsfElectrons");
    algos.push_back(algo387);
    AlgoBase* algo388 = new ToyAlgo("elPFIsoValueGamma04",0,0);
    algo388->produces("elPFIsoValueGamma04");
    algo388->reads("elPFIsoDepositGamma");
    algos.push_back(algo388);
    AlgoBase* algo389 = new ToyAlgo("trackWithVertexRefSelector",0,0);
    algo389->produces("trackWithVertexRefSelector");
    algo389->reads("generalTracks");
    algo389->reads("offlinePrimaryVertices");
    algos.push_back(algo389);
    AlgoBase* algo390 = new ToyAlgo("corMetGlobalMuons",0,0);
    algo390->produces("corMetGlobalMuons");
    algo390->reads("muons");
    algo390->reads("muonMETValueMapProducer");
    algo390->reads("met");
    algos.push_back(algo390);
    AlgoBase* algo391 = new ToyAlgo("castorDigis",0,0);
    algo391->produces("castorDigis");
    algo391->reads("rawDataCollector");
    algos.push_back(algo391);
    AlgoBase* algo392 = new ToyAlgo("hpsTancTausDiscriminationByTancMedium",0,0);
    algo392->produces("hpsTancTausDiscriminationByTancMedium");
    algo392->reads("hpsTancTaus");
    algo392->reads("hpsTancTausDiscriminationByTanc");
    algos.push_back(algo392);
    AlgoBase* algo393 = new ToyAlgo("JetPlusTrackZSPCorJetAntiKt5",0,0);
    algo393->produces("JetPlusTrackZSPCorJetAntiKt5");
    algo393->reads("gsfElectrons");
    algo393->reads("ak5JetTracksAssociatorAtCaloFace");
    algo393->reads("ak5CaloJets");
    algo393->reads("JPTeidTight");
    algo393->reads("offlinePrimaryVertices");
    algo393->reads("ak5JetTracksAssociatorAtVertex");
    algo393->reads("muons");
    algos.push_back(algo393);
    AlgoBase* algo394 = new ToyAlgo("caloRecoTauProducer",0,0);
    algo394->produces("caloRecoTauProducer");
    algo394->reads("horeco");
    algo394->reads("generalTracks");
    algo394->reads("JPTCaloRecoTauProducer");
    algo394->reads("cscSegments");
    algo394->reads("hbhereco");
    algo394->reads("hfreco");
    algo394->reads("offlinePrimaryVertices");
    algo394->reads("ecalRecHit");
    algo394->reads("dt4DSegments");
    algo394->reads("towerMaker");
    algos.push_back(algo394);
    AlgoBase* algo395 = new ToyAlgo("softElectronByPtBJetTags",0,0);
    algo395->produces("softElectronByPtBJetTags");
    algo395->reads("softElectronTagInfos");
    algos.push_back(algo395);
    AlgoBase* algo396 = new ToyAlgo("gtDigis",0,0);
    algo396->produces("gtDigis");
    algo396->reads("rawDataCollector");
    algos.push_back(algo396);
    AlgoBase* algo397 = new ToyAlgo("hpsTancTausDiscriminationByLooseMuonRejection",0,0);
    algo397->produces("hpsTancTausDiscriminationByLooseMuonRejection");
    algo397->reads("hpsTancTaus");
    algos.push_back(algo397);
    AlgoBase* algo398 = new ToyAlgo("ecalDrivenElectronSeeds",0,0);
    algo398->produces("ecalDrivenElectronSeeds");
    algo398->reads("newCombinedSeeds");
    algo398->reads("offlineBeamSpot");
    algo398->reads("hbhereco");
    algo398->reads("offlinePrimaryVerticesWithBS");
    algo398->reads("correctedMulti5x5SuperClustersWithPreshower");
    algo398->reads("correctedHybridSuperClusters");
    algo398->reads("towerMaker");
    algos.push_back(algo398);
    AlgoBase* algo399 = new ToyAlgo("siStripMatchedRecHits",0,0);
    algo399->produces("siStripMatchedRecHits");
    algo399->reads("siStripClusters");
    algos.push_back(algo399);
    AlgoBase* algo400 = new ToyAlgo("multi5x5SuperClustersUncleaned",0,0);
    algo400->produces("multi5x5SuperClustersUncleaned");
    algos.push_back(algo400);
    AlgoBase* algo401 = new ToyAlgo("initialStepSeeds",0,0);
    algo401->produces("initialStepSeeds");
    algo401->reads("siStripClusters");
    algo401->reads("siPixelClusters");
    algo401->reads("offlineBeamSpot");
    algos.push_back(algo401);
    AlgoBase* algo402 = new ToyAlgo("castorreco",0,0);
    algo402->produces("castorreco");
    algo402->reads("castorDigis");
    algos.push_back(algo402);
    AlgoBase* algo403 = new ToyAlgo("photonCore",0,0);
    algo403->produces("photonCore");
    algo403->reads("conversions");
    algo403->reads("correctedHybridSuperClusters");
    algo403->reads("correctedMulti5x5SuperClustersWithPreshower");
    algos.push_back(algo403);
    AlgoBase* algo404 = new ToyAlgo("phPFIsoDepositNeutral",0,0);
    algo404->produces("phPFIsoDepositNeutral");
    algo404->reads("pfSelectedPhotons");
    algo404->reads("pfAllNeutralHadrons");
    algos.push_back(algo404);
    AlgoBase* algo405 = new ToyAlgo("caloRecoTauDiscriminationByTrackIsolation",0,0);
    algo405->produces("caloRecoTauDiscriminationByTrackIsolation");
    algo405->reads("caloRecoTauDiscriminationByLeadingTrackFinding");
    algo405->reads("caloRecoTauProducer");
    algos.push_back(algo405);
    AlgoBase* algo406 = new ToyAlgo("multi5x5PreshowerClusterShape",0,0);
    algo406->produces("multi5x5PreshowerClusterShape");
    algo406->reads("ecalPreshowerRecHit");
    algo406->reads("correctedMulti5x5SuperClustersWithPreshower");
    algos.push_back(algo406);
    AlgoBase* algo407 = new ToyAlgo("combinedSecondaryVertexMVABJetTags",0,0);
    algo407->produces("combinedSecondaryVertexMVABJetTags");
    algo407->reads("impactParameterTagInfos");
    algos.push_back(algo407);
    AlgoBase* algo408 = new ToyAlgo("interestingGamIsoDetIdEB",0,0);
    algo408->produces("interestingGamIsoDetIdEB");
    algo408->reads("photons");
    algo408->reads("ecalRecHit");
    algos.push_back(algo408);
    AlgoBase* algo409 = new ToyAlgo("interestingGamIsoDetIdEE",0,0);
    algo409->produces("interestingGamIsoDetIdEE");
    algo409->reads("photons");
    algo409->reads("ecalRecHit");
    algos.push_back(algo409);
    AlgoBase* algo410 = new ToyAlgo("ecalDrivenGsfElectrons",0,0);
    algo410->produces("ecalDrivenGsfElectrons");
    algo410->reads("generalTracks");
    algo410->reads("offlineBeamSpot");
    algo410->reads("ecalDrivenElectronSeeds");
    algo410->reads("ecalDrivenGsfElectronCores");
    algo410->reads("pfTrackElec");
    algo410->reads("ecalRecHit");
    algo410->reads("towerMaker");
    algos.push_back(algo410);
    AlgoBase* algo411 = new ToyAlgo("muidTM2DCompatibilityTight",0,0);
    algo411->produces("muidTM2DCompatibilityTight");
    algo411->reads("muons1stStep");
    algos.push_back(algo411);
    AlgoBase* algo412 = new ToyAlgo("muPFIsoValueGamma04",0,0);
    algo412->produces("muPFIsoValueGamma04");
    algo412->reads("muPFIsoDepositGamma");
    algos.push_back(algo412);
    AlgoBase* algo413 = new ToyAlgo("muPFIsoValueGamma03",0,0);
    algo413->produces("muPFIsoValueGamma03");
    algo413->reads("muPFIsoDepositGamma");
    algos.push_back(algo413);
    AlgoBase* algo414 = new ToyAlgo("towerMakerPF",0,0);
    algo414->produces("towerMakerPF");
    algo414->reads("horeco");
    algo414->reads("ecalRecHit");
    algo414->reads("hfreco");
    algo414->reads("hbhereco");
    algos.push_back(algo414);
    AlgoBase* algo415 = new ToyAlgo("elPFIsoDepositNeutral",0,0);
    algo415->produces("elPFIsoDepositNeutral");
    algo415->reads("pfSelectedElectrons");
    algo415->reads("pfAllNeutralHadrons");
    algos.push_back(algo415);
    AlgoBase* algo416 = new ToyAlgo("uncleanedOnlyGsfGeneralInOutOutInConversionTrackMerger",0,0);
    algo416->produces("uncleanedOnlyGsfGeneralInOutOutInConversionTrackMerger");
    algos.push_back(algo416);
    AlgoBase* algo417 = new ToyAlgo("TriggerResults",0,0);
    algo417->produces("TriggerResults");
    algos.push_back(algo417);
    AlgoBase* algo418 = new ToyAlgo("gctDigis",0,0);
    algo418->produces("gctDigis");
    algo418->reads("rawDataCollector");
    algos.push_back(algo418);
    AlgoBase* algo419 = new ToyAlgo("shrinkingConePFTauDiscriminationByLeadingTrackFinding",0,0);
    algo419->produces("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo419->reads("shrinkingConePFTauProducer");
    algos.push_back(algo419);
    AlgoBase* algo420 = new ToyAlgo("gsfElectronCores",0,0);
    algo420->produces("gsfElectronCores");
    algo420->reads("electronGsfTracks");
    algo420->reads("generalTracks");
    algo420->reads("pfTrackElec");
    algo420->reads("pfElectronTranslator");
    algo420->reads("ecalDrivenGsfElectronCores");
    algos.push_back(algo420);
    AlgoBase* algo421 = new ToyAlgo("EcalHaloData",0,0);
    algo421->produces("EcalHaloData");
    algo421->reads("correctedHybridSuperClusters");
    algo421->reads("ecalPreshowerRecHit");
    algo421->reads("ecalRecHit");
    algo421->reads("photons");
    algos.push_back(algo421);
    AlgoBase* algo422 = new ToyAlgo("hpsTancTausDiscriminationByLooseIsolation",0,0);
    algo422->produces("hpsTancTausDiscriminationByLooseIsolation");
    algo422->reads("hpsTancTaus");
    algo422->reads("offlinePrimaryVertices");
    algo422->reads("kt6PFJets");
    algo422->reads("particleFlow");
    algo422->reads("hpsTancTausDiscriminationByDecayModeSelection");
    algos.push_back(algo422);
    AlgoBase* algo423 = new ToyAlgo("towerMakerWithHO",0,0);
    algo423->produces("towerMakerWithHO");
    algo423->reads("horeco");
    algo423->reads("ecalRecHit");
    algo423->reads("hfreco");
    algo423->reads("hbhereco");
    algos.push_back(algo423);
    AlgoBase* algo424 = new ToyAlgo("initialStepTrackCandidates",0,0);
    algo424->produces("initialStepTrackCandidates");
    algo424->reads("initialStepSeeds");
    algos.push_back(algo424);
    AlgoBase* algo425 = new ToyAlgo("ak7JetTracksAssociatorAtVertex",0,0);
    algo425->produces("ak7JetTracksAssociatorAtVertex");
    algo425->reads("generalTracks");
    algo425->reads("offlinePrimaryVertices");
    algo425->reads("ak7CaloJets");
    algos.push_back(algo425);
    AlgoBase* algo426 = new ToyAlgo("uncleanedOnlyMulti5x5SuperClustersWithPreshower",0,0);
    algo426->produces("uncleanedOnlyMulti5x5SuperClustersWithPreshower");
    algo426->reads("multi5x5SuperClusters");
    algo426->reads("ecalPreshowerRecHit");
    algos.push_back(algo426);
    AlgoBase* algo427 = new ToyAlgo("hpsPFTauDiscriminationByMediumMuonRejection",0,0);
    algo427->produces("hpsPFTauDiscriminationByMediumMuonRejection");
    algo427->reads("hpsPFTauProducer");
    algos.push_back(algo427);
    AlgoBase* algo428 = new ToyAlgo("muidGlobalMuonPromptTight",0,0);
    algo428->produces("muidGlobalMuonPromptTight");
    algo428->reads("muons1stStep");
    algos.push_back(algo428);
    AlgoBase* algo429 = new ToyAlgo("hfreco",0,0);
    algo429->produces("hfreco");
    algo429->reads("hcalDigis");
    algos.push_back(algo429);
    AlgoBase* algo430 = new ToyAlgo("pfPhotonInterestingEcalDetIdEE",0,0);
    algo430->produces("pfPhotonInterestingEcalDetIdEE");
    algo430->reads("ecalRecHit");
    algo430->reads("pfPhotonTranslator");
    algos.push_back(algo430);
    AlgoBase* algo431 = new ToyAlgo("pfPhotonInterestingEcalDetIdEB",0,0);
    algo431->produces("pfPhotonInterestingEcalDetIdEB");
    algo431->reads("ecalRecHit");
    algo431->reads("pfPhotonTranslator");
    algos.push_back(algo431);
    AlgoBase* algo432 = new ToyAlgo("softElectronTagInfos",0,0);
    algo432->produces("softElectronTagInfos");
    algo432->reads("ak5CaloJets");
    algo432->reads("softElectronCands");
    algo432->reads("gsfElectrons");
    algo432->reads("offlinePrimaryVertices");
    algos.push_back(algo432);
    AlgoBase* algo433 = new ToyAlgo("ghostTrackVertexTagInfos",0,0);
    algo433->produces("ghostTrackVertexTagInfos");
    algo433->reads("impactParameterTagInfos");
    algo433->reads("offlineBeamSpot");
    algos.push_back(algo433);
    AlgoBase* algo434 = new ToyAlgo("pfElectronInterestingEcalDetIdEB",0,0);
    algo434->produces("pfElectronInterestingEcalDetIdEB");
    algo434->reads("ecalRecHit");
    algo434->reads("pfElectronTranslator");
    algos.push_back(algo434);
    AlgoBase* algo435 = new ToyAlgo("uncleanedOnlyCkfInOutTracksFromConversions",0,0);
    algo435->produces("uncleanedOnlyCkfInOutTracksFromConversions");
    algo435->reads("uncleanedOnlyConversionTrackCandidates");
    algo435->reads("offlineBeamSpot");
    algos.push_back(algo435);
    AlgoBase* algo436 = new ToyAlgo("hpsTancTausDiscriminationByTancVLoose",0,0);
    algo436->produces("hpsTancTausDiscriminationByTancVLoose");
    algo436->reads("hpsTancTaus");
    algo436->reads("hpsTancTausDiscriminationByTanc");
    algos.push_back(algo436);
    AlgoBase* algo437 = new ToyAlgo("l1GtTriggerMenuLite",0,0);
    algo437->produces("l1GtTriggerMenuLite");
    algos.push_back(algo437);
    AlgoBase* algo438 = new ToyAlgo("mixedTripletStepClusters",0,0);
    algo438->produces("mixedTripletStepClusters");
    algo438->reads("detachedTripletStepClusters");
    algo438->reads("detachedTripletStep");
    algo438->reads("siStripClusters");
    algo438->reads("detachedTripletStepTracks");
    algo438->reads("siPixelClusters");
    algos.push_back(algo438);
    AlgoBase* algo439 = new ToyAlgo("generalConversionStepConversionTrackMerger",0,0);
    algo439->produces("generalConversionStepConversionTrackMerger");
    algos.push_back(algo439);
    AlgoBase* algo440 = new ToyAlgo("hpsTancTausDiscriminationByLeadingTrackFinding",0,0);
    algo440->produces("hpsTancTausDiscriminationByLeadingTrackFinding");
    algo440->reads("hpsTancTaus");
    algos.push_back(algo440);
    AlgoBase* algo441 = new ToyAlgo("convClusters",0,0);
    algo441->produces("convClusters");
    algo441->reads("siStripClusters");
    algo441->reads("tobTecStepClusters");
    algo441->reads("siPixelClusters");
    algo441->reads("tobTecStepSelector");
    algo441->reads("tobTecStepTracks");
    algos.push_back(algo441);
    AlgoBase* algo442 = new ToyAlgo("muIsoDepositCalByAssociatorTowers",0,0);
    algo442->produces("muIsoDepositCalByAssociatorTowers");
    algo442->reads("muons1stStep");
    algos.push_back(algo442);
    AlgoBase* algo443 = new ToyAlgo("kt6CaloJetsCentral",0,0);
    algo443->produces("kt6CaloJetsCentral");
    algo443->reads("offlinePrimaryVertices");
    algo443->reads("towerMaker");
    algos.push_back(algo443);
    AlgoBase* algo444 = new ToyAlgo("muPFIsoValuePU04",0,0);
    algo444->produces("muPFIsoValuePU04");
    algo444->reads("muPFIsoDepositPU");
    algos.push_back(algo444);
    AlgoBase* algo445 = new ToyAlgo("muPFIsoValuePU03",0,0);
    algo445->produces("muPFIsoValuePU03");
    algo445->reads("muPFIsoDepositPU");
    algos.push_back(algo445);
    AlgoBase* algo446 = new ToyAlgo("conditionsInEdm",0,0);
    algo446->produces("conditionsInEdm");
    algo446->reads("gtEvmDigis");
    algos.push_back(algo446);
    AlgoBase* algo447 = new ToyAlgo("detachedTripletStepClusters",0,0);
    algo447->produces("detachedTripletStepClusters");
    algo447->reads("siStripClusters");
    algo447->reads("pixelPairStepSelector");
    algo447->reads("siPixelClusters");
    algo447->reads("pixelPairStepClusters");
    algo447->reads("pixelPairStepTracks");
    algos.push_back(algo447);
    AlgoBase* algo448 = new ToyAlgo("logErrorHarvester",0,0);
    algo448->produces("logErrorHarvester");
    algos.push_back(algo448);
    AlgoBase* algo449 = new ToyAlgo("offlineBeamSpot",0,0);
    algo449->produces("offlineBeamSpot");
    algos.push_back(algo449);
    AlgoBase* algo450 = new ToyAlgo("ak5PFJets",0,0);
    algo450->produces("ak5PFJets");
    algo450->reads("particleFlow");
    algos.push_back(algo450);
    AlgoBase* algo451 = new ToyAlgo("muidTMLastStationLoose",0,0);
    algo451->produces("muidTMLastStationLoose");
    algo451->reads("muons1stStep");
    algos.push_back(algo451);
    AlgoBase* algo452 = new ToyAlgo("ak5JetTracksAssociatorAtVertex",0,0);
    algo452->produces("ak5JetTracksAssociatorAtVertex");
    algo452->reads("ak5CaloJets");
    algo452->reads("offlinePrimaryVertices");
    algo452->reads("generalTracks");
    algos.push_back(algo452);
    AlgoBase* algo453 = new ToyAlgo("shrinkingConePFTauDiscriminationByIsolation",0,0);
    algo453->produces("shrinkingConePFTauDiscriminationByIsolation");
    algo453->reads("shrinkingConePFTauProducer");
    algo453->reads("shrinkingConePFTauDiscriminationByLeadingTrackFinding");
    algo453->reads("offlinePrimaryVertices");
    algo453->reads("kt6PFJets");
    algo453->reads("particleFlow");
    algos.push_back(algo453);
    AlgoBase* algo454 = new ToyAlgo("caloRecoTauDiscriminationByECALIsolation",0,0);
    algo454->produces("caloRecoTauDiscriminationByECALIsolation");
    algo454->reads("caloRecoTauDiscriminationByLeadingTrackFinding");
    algo454->reads("caloRecoTauProducer");
    algos.push_back(algo454);
    AlgoBase* algo455 = new ToyAlgo("combinatoricRecoTaus",0,0);
    algo455->produces("combinatoricRecoTaus");
    algo455->reads("recoTauAK5PFJets08Region");
    algo455->reads("ak5PFJetsLegacyHPSPiZeros");
    algo455->reads("ak5PFJets");
    algo455->reads("pfRecoTauTagInfoProducer");
    algo455->reads("offlinePrimaryVertices");
    algo455->reads("particleFlow");
    algos.push_back(algo455);
return algos;
};
#endif
